{"version":3,"file":"BootstrapTable.min.js","mappings":"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","sources":["webpack://webpack-eddn/../widgets/alext/BootstrapTable/assets/Pagination.js","webpack://webpack-eddn/../widgets/alext/BootstrapTable/assets/SortTable.js","webpack://webpack-eddn/../widgets/alext/BootstrapTable/assets/Table.js","webpack://webpack-eddn/../widgets/alext/BootstrapTable/assets/BootstrapTable.js"],"sourcesContent":["export function Pagination(maxPageBtnQty, fetchData, paginationHTML = null, table = null) {\r\n    this.fetchData = fetchData;\r\n    this.maxPageBtnQty = maxPageBtnQty;\r\n    this.paginationHTML = paginationHTML;\r\n    this.data = null;\r\n    this.table = table;\r\n}\r\n\r\nPagination.prototype.getCurrentDataPage = function() {\r\n    return $('li.active > a').attr('data-page');\r\n};\r\n\r\nPagination.prototype.renderNewPageBtns = function(links, next, last, current, totalCount, limit, maxPageBtnQty) {\r\n    const $pageNumBtns = $('li > .page-link');\r\n    const pageBtnFirstNum = parseInt($pageNumBtns.eq(2).attr('data-page')) + 1;\r\n    const pageBtnLastNum = parseInt($pageNumBtns.eq($pageNumBtns.length - 3).attr('data-page')) + 1;\r\n    const clsBegin = next === 1 ? 'page-link disabled' : 'page-link';\r\n    const clsEnd = next === last ? 'page-link disabled' : 'page-link';\r\n    const pageBtnQty = maxPageBtnQty <= last ? maxPageBtnQty : last;\r\n\r\n    let html =\r\n        `<li class=\"page-item first\"><a class=\"${clsBegin}\" href=\"${links.first}\" data-page=\"0\">first</a></li>`;\r\n    html +=\r\n        `<li class=\"page-item prev-page\">\r\n                <a class=\"${clsBegin}\" href=\"${links.prev}\" data-page=\"${next - 1}\">\r\n                    <span aria-hidden=\"true\">«</span>\r\n                </a>\r\n            </li>`;\r\n\r\n    for (let i = 0; i < pageBtnQty; i++) {\r\n        const href = links.first.substring(0, links.first.length - 1);\r\n        let pageNum;\r\n\r\n        if (next > current) {\r\n            if (next >= last - 1) {\r\n                pageNum = last - (pageBtnQty - 1) + i;\r\n            } else pageNum = pageBtnLastNum - next < 2 ? (next - (pageBtnQty - 3)) + i : pageBtnFirstNum + i;\r\n        } else {\r\n            if (next <= 2) {\r\n                pageNum = 1 + i;\r\n            } else pageNum = next - pageBtnFirstNum < 2 ? (next - 2) + i : pageBtnFirstNum + i;\r\n        }\r\n\r\n        const cls = pageNum === next ? 'page-item active' : 'page-item';\r\n        html +=\r\n            `<li class=\"${cls}\">\r\n                        <a class=\"page-link\" href=\"${href}${pageNum}\" data-page=\"${pageNum - 1}\">${pageNum}</a>\r\n                    </li>`;\r\n    }\r\n    html +=\r\n        `<li class=\"page-item next-page\">\r\n                    <a class=\"${clsEnd}\" href=\"${links.next}\" data-page=\"${next - 1}\">\r\n                        <span aria-hidden=\"true\">»</span>\r\n                    </a>\r\n                </li>`;\r\n    html +=\r\n        `<li class=\"page-item last\">\r\n                    <a class=\"${clsEnd}\" href=\"${links.last}\" data-page=\"${last - 1}\">last</a>\r\n                </li>`;\r\n\r\n    $('.pagination').html(html);\r\n    $('.page-counter').text(`${this.getCurrentDataPage() * limit + 1} \r\n       - ${next * limit < totalCount ? next * limit : totalCount} / ${totalCount}`);\r\n\r\n    this.setEventListeners();\r\n};\r\n\r\nPagination.prototype.handleClick = async function (e) {\r\n    e.preventDefault();\r\n    if ($(e.currentTarget).parent().is('.active')) return;\r\n    const data = await this.fetchData($(e.currentTarget).attr('href'));\r\n    this.data = data;\r\n\r\n    this.renderNewPageBtns(\r\n        data.links,\r\n        data.page + 1, // zero based next page received from backend + 1\r\n        data.lastPage,\r\n        this.getCurrentDataPage(), // zero based current page\r\n        data.totalCount,\r\n        data.limit, // qty per page\r\n        this.maxPageBtnQty\r\n    );\r\n};\r\n\r\nPagination.prototype.resetPagination = function(limit, totalCount, links, lastPage) {\r\n    $('.page-counter').text(`${0 * limit + 1} - ${1 * limit} / ${totalCount}`);\r\n\r\n    this.renderNewPageBtns(\r\n        links,\r\n        1, // zero based next page received from backend + 1\r\n        lastPage,\r\n        0, // zero based current page\r\n        totalCount,\r\n        limit, // qty per page\r\n        this.maxPageBtnQty\r\n    );\r\n    this.setEventListeners();\r\n};\r\n\r\nPagination.prototype.setEventListeners = function() {\r\n    $('.page-item > .page-link').on('click', (e) => this.handleClick(e));\r\n};\r\n","export function SortTable(cnt, fetchData, table =null, pagination = null) {\r\n    this.cnt = cnt;\r\n    this.pagination = pagination;\r\n    this.fetchData = fetchData;\r\n    this.data = null;\r\n    this.table = table;\r\n}\r\n\r\nSortTable.prototype.handleClick = async function(e) {\r\n    e.preventDefault();\r\n    const data = await this.fetchData($(e.currentTarget).attr('href'));\r\n    this.data = data;\r\n    this.pagination &&\r\n    this.pagination.resetPagination.apply(\r\n        this.pagination,\r\n        [data.limit,data.totalCount,data.links,data.lastPage]\r\n        );\r\n    $('a.sort').removeClass(['asc', 'desc', 'sorted']);\r\n\r\n    if (Object.values(data.attributeOrders)[0] === 4) {\r\n        $(e.currentTarget).addClass(['sorted', 'asc']);\r\n    } else $(e.currentTarget).addClass(['sorted', 'desc']);\r\n\r\n    $(e.currentTarget).attr('href', data.sortUrl);\r\n};\r\n\r\nSortTable.prototype.setEventListeners = function() {\r\n    $(this.cnt + ' .sort').on('click', (e) => this.handleClick(e));\r\n};\r\n","export function Table(cnt, columns) {\r\n    this.cnt = cnt;\r\n    this.columns = columns;\r\n}\r\n\r\nTable.prototype.getRows = function () {\r\n    return $(`#${this.cnt} tbody tr`);\r\n};\r\n\r\nTable.prototype.fillTable = function (data) {\r\n    const actualColumns = [];\r\n\r\n    this.columns.forEach(item => {\r\n        if (item in data[0]) actualColumns.push(item);\r\n    });\r\n\r\n    this.getRows().each(function (rowIndex) {\r\n        if (!data[rowIndex]) {\r\n            $(this).hide();\r\n            return;\r\n        }\r\n\r\n        if ($(this).is(\":hidden\")) $(this).show();\r\n\r\n        $(this).find('td').each(function (cellIndex) {\r\n            const newRowData = data[rowIndex][actualColumns[cellIndex]];\r\n\r\n            if (typeof(newRowData) === 'object') {\r\n                if ('url' in newRowData) {\r\n                    $(this).html(\r\n                        `<a href=\"${newRowData['url']}\" \r\n                            class='table-link text-decoration-underline link-underline-primary'>\r\n                            ${newRowData['text']}</a>`\r\n                    );\r\n                }\r\n            } else $(this).text(newRowData);\r\n        });\r\n    });\r\n};","import { Pagination } from './Pagination.js';\nimport { SortTable } from './SortTable.js';\nimport { Table } from './Table.js';\n\nconst $table = $('.bs-table');\nconst $pagination = $('.pagination');\n\nconst $table_columns = [];\n\n$('.c-table th').each(function () {\n    $table_columns.push($(this).attr('data-attr'))\n});\n\nconst table = new Table('c-table', $table_columns);\n\nconst proxyHandler = {\n    set(target, prop, val) {\n        if (prop === \"data\") {\n            table.fillTable(val.data);\n            return true;\n        }\n        return true;\n    },\n};\n\nconst pagination = $pagination.length ?\n    new Proxy(new Pagination(7, fetchData, $pagination.html(), table), proxyHandler) : null;\nconst sortTable = $pagination.length ?\n    new Proxy(new SortTable('.c-table', fetchData, table, pagination), proxyHandler) :\n    new Proxy(new SortTable('.c-table', fetchData, table), proxyHandler);\n\n/* Table constructor and methods */\n// function Table(cnt, columns) {\n//     this.cnt = cnt;\n//     this.columns = columns;\n// }\n\n// Table.prototype.getRows = function () {\n//     return $(`#${this.cnt} tbody tr`);\n// };\n\n// Table.prototype.fillTable = function (data) {\n//     const actualColumns = [];\n\n//     this.columns.forEach(item => {\n//         if (item in data[0]) actualColumns.push(item);\n//     });\n\n//     this.getRows().each(function (rowIndex) {\n//         if (!data[rowIndex]) {\n//             $(this).hide();\n//             return;\n//         }\n\n//         if ($(this).is(\":hidden\")) $(this).show();\n\n//         $(this).find('td').each(function (cellIndex) {\n//             const newRowData = data[rowIndex][actualColumns[cellIndex]];\n\n//             if (typeof(newRowData) === 'object') {\n//                 if ('url' in newRowData) {\n//                     $(this).html(\n//                         `<a href=\"${newRowData['url']}\" \n//                             class='table-link text-decoration-underline link-underline-primary'>\n//                             ${newRowData['text']}</a>`\n//                     );\n//                 }\n//             } else $(this).text(newRowData);\n//         });\n//     });\n// };\n// /* End of Table constructor and methods */\n\n// /* Pagination constructor and methods */\n// function Pagination(maxPageBtnQty, fetchData, paginationHTML = null, table = null) {\n//     this.fetchData = fetchData;\n//     this.maxPageBtnQty = maxPageBtnQty;\n//     this.paginationHTML = paginationHTML;\n//     this.data = null;\n//     this.table = table;\n// }\n\n// Pagination.prototype.getCurrentDataPage = function() {\n//     return $('li.active > a').attr('data-page');\n// };\n\n// Pagination.prototype.renderNewPageBtns = function(links, next, last, current, totalCount, limit, maxPageBtnQty) {\n//     const $pageNumBtns = $('li > .page-link');\n//     const pageBtnFirstNum = parseInt($pageNumBtns.eq(2).attr('data-page')) + 1;\n//     const pageBtnLastNum = parseInt($pageNumBtns.eq($pageNumBtns.length - 3).attr('data-page')) + 1;\n//     const clsBegin = next === 1 ? 'page-link disabled' : 'page-link';\n//     const clsEnd = next === last ? 'page-link disabled' : 'page-link';\n//     const pageBtnQty = maxPageBtnQty <= last ? maxPageBtnQty : last;\n\n//     let html =\n//         `<li class=\"page-item first\"><a class=\"${clsBegin}\" href=\"${links.first}\" data-page=\"0\">first</a></li>`;\n//     html +=\n//         `<li class=\"page-item prev-page\">\n//                 <a class=\"${clsBegin}\" href=\"${links.prev}\" data-page=\"${next - 1}\">\n//                     <span aria-hidden=\"true\">«</span>\n//                 </a>\n//             </li>`;\n\n//     for (let i = 0; i < pageBtnQty; i++) {\n//         const href = links.first.substring(0, links.first.length - 1);\n//         let pageNum;\n\n//         if (next > current) {\n//             if (next >= last - 1) {\n//                 pageNum = last - (pageBtnQty - 1) + i;\n//             } else pageNum = pageBtnLastNum - next < 2 ? (next - (pageBtnQty - 3)) + i : pageBtnFirstNum + i;\n//         } else {\n//             if (next <= 2) {\n//                 pageNum = 1 + i;\n//             } else pageNum = next - pageBtnFirstNum < 2 ? (next - 2) + i : pageBtnFirstNum + i;\n//         }\n\n//         const cls = pageNum === next ? 'page-item active' : 'page-item';\n//         html +=\n//             `<li class=\"${cls}\">\n//                         <a class=\"page-link\" href=\"${href}${pageNum}\" data-page=\"${pageNum - 1}\">${pageNum}</a>\n//                     </li>`;\n//     }\n//     html +=\n//         `<li class=\"page-item next-page\">\n//                     <a class=\"${clsEnd}\" href=\"${links.next}\" data-page=\"${next - 1}\">\n//                         <span aria-hidden=\"true\">»</span>\n//                     </a>\n//                 </li>`;\n//     html +=\n//         `<li class=\"page-item last\">\n//                     <a class=\"${clsEnd}\" href=\"${links.last}\" data-page=\"${last - 1}\">last</a>\n//                 </li>`;\n\n//     $('.pagination').html(html);\n//     $('.page-counter').text(`${this.getCurrentDataPage() * limit + 1} \n//        - ${next * limit < totalCount ? next * limit : totalCount} / ${totalCount}`);\n\n//     this.setEventListeners();\n// };\n\n// Pagination.prototype.handleClick = async function (e) {\n//     e.preventDefault();\n//     if ($(e.currentTarget).parent().is('.active')) return;\n//     const data = await this.fetchData($(e.currentTarget).attr('href'));\n//     this.data = data;\n\n//     this.renderNewPageBtns(\n//         data.links,\n//         data.page + 1, // zero based next page received from backend + 1\n//         data.lastPage,\n//         this.getCurrentDataPage(), // zero based current page\n//         data.totalCount,\n//         data.limit, // qty per page\n//         this.maxPageBtnQty\n//     );\n// };\n\n// Pagination.prototype.resetPagination = function(limit, totalCount, links, lastPage) {\n//     $('.page-counter').text(`${0 * limit + 1} - ${1 * limit} / ${totalCount}`);\n\n//     this.renderNewPageBtns(\n//         links,\n//         1, // zero based next page received from backend + 1\n//         lastPage,\n//         0, // zero based current page\n//         totalCount,\n//         limit, // qty per page\n//         this.maxPageBtnQty\n//     );\n//     this.setEventListeners();\n// };\n\n// Pagination.prototype.setEventListeners = function() {\n//     $('.page-item > .page-link').on('click', (e) => this.handleClick(e));\n// };\n// /* End of Pagination constructor and methods */\n\n// /* SortTable constructor and methods */\n// function SortTable(cnt, fetchData, table =null, pagination = null) {\n//     this.cnt = cnt;\n//     this.pagination = pagination;\n//     this.fetchData = fetchData;\n//     this.data = null;\n//     this.table = table;\n// }\n\n// SortTable.prototype.handleClick = async function(e) {\n//     e.preventDefault();\n//     const data = await this.fetchData($(e.currentTarget).attr('href'));\n//     this.data = data;\n//     this.pagination &&\n//     this.pagination.resetPagination.apply(\n//         this.pagination,\n//         [data.limit,data.totalCount,data.links,data.lastPage]\n//         );\n//     $('a.sort').removeClass(['asc', 'desc', 'sorted']);\n\n//     if (Object.values(data.attributeOrders)[0] === 4) {\n//         $(e.currentTarget).addClass(['sorted', 'asc']);\n//     } else $(e.currentTarget).addClass(['sorted', 'desc']);\n\n//     $(e.currentTarget).attr('href', data.sortUrl);\n// };\n\n// SortTable.prototype.setEventListeners = function() {\n//     $(this.cnt + ' .sort').on('click', (e) => this.handleClick(e));\n// };\n// /* End of SortTable constructor and methods */\n\npagination && pagination.setEventListeners();\nsortTable && sortTable.setEventListeners();\n\nasync function fetchData (url, method = 'GET', body= null, loaderCnt = null) {\n    function enableLoader(loaderCnt) {\n        if (loaderCnt !== '') $(loaderCnt).addClass('opacity-25');\n    }\n    \n    function disableLoader(loaderCnt) {\n        $(loaderCnt).removeClass('opacity-25');\n    }\n\n    loaderCnt && enableLoader(loaderCnt);\n\n    try {\n        const res = await fetch(\n            url, {\n                method: method,\n                mode: 'cors', // this cannot be 'no-cors'\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: body\n            });\n        if (res.ok) {\n            return await res.json();\n        } else {\n            console.log('fetch error');\n        }\n    }\n    catch (error) {\n        console.log(error.message);\n    }\n    finally {\n        loaderCnt && disableLoader(loaderCnt);\n    }\n};\n"],"names":["Pagination","maxPageBtnQty","fetchData","paginationHTML","arguments","length","undefined","table","this","data","SortTable","cnt","pagination","Table","columns","prototype","getCurrentDataPage","$","attr","renderNewPageBtns","links","next","last","current","totalCount","limit","$pageNumBtns","pageBtnFirstNum","parseInt","eq","pageBtnLastNum","clsBegin","clsEnd","pageBtnQty","html","concat","first","prev","i","href","substring","pageNum","text","setEventListeners","handleClick","async","e","preventDefault","currentTarget","parent","is","page","lastPage","resetPagination","on","apply","removeClass","Object","values","attributeOrders","addClass","sortUrl","getRows","fillTable","actualColumns","forEach","item","push","each","rowIndex","show","find","cellIndex","newRowData","hide","$pagination","$table_columns","proxyHandler","set","target","prop","val","Proxy","sortTable","url","method","body","loaderCnt","enableLoader","res","fetch","mode","headers","ok","json","console","log","error","message","disableLoader"],"sourceRoot":""}