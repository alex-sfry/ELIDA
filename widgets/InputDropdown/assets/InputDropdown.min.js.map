{"version":3,"sources":["InputDropdown/assets/InputDropdown.js"],"names":["InputDropdown","constructor","config","console","log","this","ddSearch","document","querySelector","search","container","selected","label","toSubmit","ddToggle","resetBtn","ddLisItems","endpoint","switchValue","closest","getListItems","ajax","ddListFillFetch","lastSearchValue","setEventListeners","searchValue","method","data","res","await","fetch","trim","mode","headers","Accept","Content-Type","ok","json","Object","values","length","keys","join","item","map","message","handleDropdownItemClick","textContent","target","querySelectorAll","classList","value","e","dropdownList","contains","remove","makeVisibleListItem","find","add","showNotFound","handleDropdownInput","radioSwitch","switchName2","endpoint2","innerHTML","checked","switchName1","endpoint1","listItemElem","appendChild","setInvalid","elemLabel","setValid","createElement","addEventListener","form","elem","hiddenListItem","textAlign","reset","isValidated","forEach","style"],"mappings":"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","file":"InputDropdown.min.js","sourcesContent":["class InputDropdown {\r\n    constructor(config) {\r\n        if (!config) return console.log('provide config for InputDropdown');\r\n        this.config = config;\r\n\r\n        this.dropdownList = document.querySelector(`#${config.container} .dropdown-menu`);\r\n        this.ddSearch = document.querySelector(`#${config.search}`);\r\n        this.selected = document.querySelector(`#${config.container} #idd-search-selected`);\r\n        this.label = document.querySelector(`#${config.container} label[for=${config.search}]`);\r\n        this.toSubmit = document.querySelector(`#${config.toSubmit}`);\r\n        this.ddToggle = document.querySelector(`#${config.container} #idd-toggle`);\r\n        this.resetBtn = document.querySelector(`#${config.container} #reset-idd`);\r\n        this.ddLisItems = [];\r\n        this.endpoint = config.endpoint ? config.endpoint : null;\r\n        this.switchValue = config.switchValue;\r\n        this.form = this.toSubmit.closest('form');\r\n        this.getListItems = config.ajax === '1' ? this.ddListFillFetch : null\r\n\r\n        // local state to prevent fetch on dropdown close (click to close)\r\n        this.searchValue = '';\r\n        this.lastSearchValue = 'test';\r\n        // =========================================\r\n        this.setEventListeners();\r\n    }\r\n\r\n    async ddListFillFetch(searchValue, endpoint) {\r\n        try {\r\n            let data = null;\r\n            const res = await fetch(\r\n                `${endpoint}${searchValue.trim()}`, {\r\n                    method: 'GET',\r\n                    mode: 'cors', // this cannot be 'no-cors'\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                });\r\n\r\n            if (res.ok) {\r\n                data = await res.json();\r\n            }\r\n\r\n            if (data) {\r\n                if (data.length <= 1) {\r\n                    if (data.length === 0) return [];\r\n\r\n                    if (Object.values(data[0]).length > 1) {\r\n                        return [Object.values(data[0]).join(' / ')];\r\n                    } else return Object.values(data[0]);\r\n                }\r\n\r\n                return data.map(item => {\r\n                    if (Object.keys(item).length > 1) {\r\n                        return Object.values(item).join(' / ');\r\n                    } else return Object.values(item);\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n\r\n    handleDropdownItemClick(e) {\r\n        if (!e.target.classList.contains('form-dropdown')) return;\r\n        if (e.target.textContent.trim() === this.selected.textContent) return;\r\n\r\n        this.toSubmit.value = e.target.textContent;\r\n        this.selected.textContent = e.target.textContent;\r\n        this.selected.classList.remove('d-none');\r\n        this.resetBtn.classList.remove('d-none');\r\n        this.makeVisibleListItem();\r\n        [...this.dropdownList.querySelectorAll('li')]\r\n            .find(item => item.textContent === e.target.textContent).classList.add('d-none');\r\n        this.searchValue = this.ddSearch.value;\r\n    };\r\n\r\n    async handleDropdownInput() {\r\n        if (!this.dropdownList.classList.contains('show')) return;\r\n\r\n        if (!this.ddSearch.value) {\r\n            this.dropdownList.querySelectorAll('li').length <= 1 &&\r\n            this.dropdownList.classList.add('visually-hidden');\r\n            return;\r\n        }\r\n\r\n        if (this.ddSearch.value === this.searchValue) {\r\n            if (this.dropdownList.querySelectorAll('li').length <= 1) {\r\n                return this.showNotFound();\r\n            }\r\n        }\r\n\r\n        if (this.ddSearch.value.length < 2) {\r\n            this.dropdownList.classList.add('visually-hidden');\r\n            this.dropdownList.innerHTML = '';\r\n            return;\r\n        }\r\n\r\n        if (this.config.ajax && this.ddSearch.value !== this.lastSearchValue) {\r\n            const radioSwitch = document.querySelectorAll(`#${this.config.container} .idd-switch`);\r\n\r\n            if (radioSwitch.length > 0) {\r\n                if (!radioSwitch[0].checked && !radioSwitch[1].checked) return;\r\n                if (radioSwitch[0].checked) this.switchValue = this.config.switchName1;\r\n                if (radioSwitch[1].checked) this.switchValue = this.config.switchName2;\r\n\r\n                switch (this.switchValue) {\r\n                    case this.config.switchName1 :\r\n                        this.endpoint = this.config.endpoint1;\r\n                        break;\r\n                    case this.config.switchName2 :\r\n                        this.endpoint = this.config.endpoint2;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (this.config.switch && !this.endpoint) return;\r\n\r\n            this.ddLisItems = await this.getListItems(this.ddSearch.value, this.endpoint);\r\n            if (!this.ddLisItems) {\r\n                this.showNotFound();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.ddSearch.value !== this.lastSearchValue) {\r\n            this.dropdownList.innerHTML = '';\r\n            this.dropdownList.classList.remove('visually-hidden');\r\n\r\n            if (this.ddLisItems.length <= 1) {\r\n                if (this.ddLisItems.length === 0) {\r\n                    return this.showNotFound();\r\n                }\r\n\r\n                if (this.ddLisItems[0] === this.selected.textContent) {\r\n                    return this.showNotFound();\r\n                }\r\n            }\r\n\r\n            this.ddLisItems.forEach(item => {\r\n                if (item === this.selected.textContent) return;\r\n\r\n                const listItemElem = document.createElement('li');\r\n                listItemElem.classList.add('form-dropdown', 'dropdown-item', 'fw-normal', 'input-dd-fs');\r\n                listItemElem.textContent = item;\r\n                this.dropdownList.appendChild(listItemElem);\r\n            });\r\n\r\n            this.lastSearchValue = this.ddSearch.value;\r\n        } else this.dropdownList.classList.remove('visually-hidden');\r\n    };\r\n\r\n    setInvalid(elem, elemLabel) {\r\n        elemLabel.classList.add('text-danger', 'is-invalid');\r\n        elem.classList.remove('border-dark');\r\n        elem.classList.add('is-invalid', 'border-2', 'border-danger');\r\n    };\r\n\r\n    setValid(elem, elemLabel) {\r\n        elemLabel.classList.remove('text-danger', 'is-invalid');\r\n        elem.classList.add('border-dark');\r\n        elem.classList.remove('is-invalid', 'border-2', 'border-danger');\r\n    };\r\n\r\n    isValidated(elem, label) {\r\n        if (!elem.checkValidity()) {\r\n            this.setInvalid(this.ddSearch, label);\r\n        }else {\r\n            this.setValid(this.ddSearch, label);\r\n        }\r\n    }\r\n\r\n    setEventListeners() {\r\n        this.ddToggle.addEventListener('click', () => this.handleDropdownInput());\r\n        this.dropdownList.addEventListener('click', (e) => this.handleDropdownItemClick(e));\r\n        this.resetBtn && this.resetBtn.addEventListener('click', () =>  this.reset());\r\n\r\n        this.form && this.form.addEventListener(\"submit\", () => this.isValidated(this.toSubmit, this.label));\r\n    };\r\n\r\n    reset() {\r\n        const radioSwitch = document.querySelectorAll(`#${this.config.container} .idd-switch`);\r\n\r\n        this.makeVisibleListItem();\r\n        this.toSubmit.value = '';\r\n        this.selected.textContent = '';\r\n        this.selected.classList.add('d-none');\r\n        this.resetBtn.classList.add('d-none');\r\n        this.searchValue = '';\r\n        this.switchValue = null;\r\n        this.dropdownList.classList.add('visually-hidden');\r\n\r\n        radioSwitch && radioSwitch.forEach(elem => elem.checked = false);\r\n    };\r\n\r\n    makeVisibleListItem() {\r\n        const hiddenListItem = this.dropdownList.querySelector('.d-none');\r\n        if (hiddenListItem) hiddenListItem.classList.remove('d-none');\r\n    };\r\n\r\n    showNotFound () {\r\n        this.dropdownList.style.textAlign = 'center';\r\n        this.dropdownList.textContent = 'Not found';\r\n    };\r\n}"]}