{"version":3,"file":"yii.gridView.js","sources":["yii.gridView.js"],"sourcesContent":["/**\n * Yii GridView widget.\n *\n * This is the JavaScript widget used by the yii\\grid\\GridView widget.\n *\n * @link https://www.yiiframework.com/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license https://www.yiiframework.com/license/\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n */\n(function ($) {\n    $.fn.yiiGridView = function (method) {\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n                return methods.init.apply(this, arguments);\n        } else {\n            $.error('Method ' + method + ' does not exist in jQuery.yiiGridView');\n            return false;\n        }\n    };\n\n    var defaults = {\n        filterUrl: undefined,\n        filterSelector: undefined,\n        filterOnFocusOut: true\n    };\n\n    var gridData = {};\n\n    var gridEvents = {\n        /**\n         * beforeFilter event is triggered before filtering the grid.\n         * The signature of the event handler should be:\n         *     function (event)\n         * where\n         *  - event: an Event object.\n         *\n         * If the handler returns a boolean false, it will stop filter form submission after this event. As\n         * a result, afterFilter event will not be triggered.\n         */\n        beforeFilter: 'beforeFilter',\n        /**\n         * afterFilter event is triggered after filtering the grid and filtered results are fetched.\n         * The signature of the event handler should be:\n         *     function (event)\n         * where\n         *  - event: an Event object.\n         */\n        afterFilter: 'afterFilter'\n    };\n\n    /**\n     * Used for storing active event handlers and removing them later.\n     * The structure of single event handler is:\n     *\n     * {\n     *     gridViewId: {\n     *         type: {\n     *             event: '...',\n     *             selector: '...'\n     *         }\n     *     }\n     * }\n     *\n     * Used types:\n     *\n     * - filter, used for filtering grid with elements found by filterSelector\n     * - checkRow, used for checking single row\n     * - checkAllRows, used for checking all rows with according \"Check all\" checkbox\n     *\n     * event is the name of event, for example: 'change.yiiGridView'\n     * selector is a jQuery selector for finding elements\n     *\n     * @type {{}}\n     */\n    var gridEventHandlers = {};\n\n    var methods = {\n        init: function (options) {\n            return this.each(function () {\n                var $e = $(this);\n                var settings = $.extend({}, defaults, options || {});\n                var id = $e.attr('id');\n                if (gridData[id] === undefined) {\n                    gridData[id] = {};\n                }\n\n                gridData[id] = $.extend(gridData[id], {settings: settings});\n\n                var filterEvents = 'change.yiiGridView keydown.yiiGridView';\n                var enterPressed = false;\n                initEventHandler($e, 'filter', filterEvents, settings.filterSelector, function (event) {\n                    if (event.type === 'keydown') {\n                        if (event.keyCode !== 13) {\n                            return; // only react to enter key\n                        } else {\n                            enterPressed = true;\n                        }\n                    } else {\n                        // prevent processing for both keydown and change events\n                        if (enterPressed) {\n                            enterPressed = false;\n                            return;\n                        }\n                    }\n                    if (!settings.filterOnFocusOut && event.type !== 'keydown') {\n                        return false;\n                    }\n\n                    methods.applyFilter.apply($e);\n\n                    return false;\n                });\n            });\n        },\n\n        applyFilter: function () {\n            var $grid = $(this);\n            var settings = gridData[$grid.attr('id')].settings;\n            var data = {};\n            $.each($(settings.filterSelector).serializeArray(), function () {\n                if (!(this.name in data)) {\n                    data[this.name] = [];\n                }\n                data[this.name].push(this.value);\n            });\n\n            var namesInFilter = Object.keys(data);\n\n            $.each(yii.getQueryParams(settings.filterUrl), function (name, value) {\n                if (namesInFilter.indexOf(name) === -1 && namesInFilter.indexOf(name.replace(/\\[\\d*\\]$/, '')) === -1) {\n                    if (!$.isArray(value)) {\n                        value = [value];\n                    }\n                    if (!(name in data)) {\n                        data[name] = value;\n                    } else {\n                        $.each(value, function (i, val) {\n                            if ($.inArray(val, data[name])) {\n                                data[name].push(val);\n                            }\n                        });\n                    }\n                }\n            });\n\n            var pos = settings.filterUrl.indexOf('?');\n            var url = pos < 0 ? settings.filterUrl : settings.filterUrl.substring(0, pos);\n            var hashPos = settings.filterUrl.indexOf('#');\n            if (pos >= 0 && hashPos >= 0) {\n                url += settings.filterUrl.substring(hashPos);\n            }\n\n            $grid.find('form.gridview-filter-form').remove();\n            var $form = $('<form/>', {\n                action: url,\n                method: 'get',\n                'class': 'gridview-filter-form',\n                style: 'display:none',\n                'data-pjax': ''\n            }).appendTo($grid);\n            $.each(data, function (name, values) {\n                $.each(values, function (index, value) {\n                    $form.append($('<input/>').attr({type: 'hidden', name: name, value: value}));\n                });\n            });\n\n            var event = $.Event(gridEvents.beforeFilter);\n            $grid.trigger(event);\n            if (event.result === false) {\n                return;\n            }\n\n            $form.submit();\n\n            $grid.trigger(gridEvents.afterFilter);\n        },\n\n        setSelectionColumn: function (options) {\n            var $grid = $(this);\n            var id = $(this).attr('id');\n            if (gridData[id] === undefined) {\n                gridData[id] = {};\n            }\n            gridData[id].selectionColumn = options.name;\n            if (!options.multiple || !options.checkAll) {\n                return;\n            }\n            var checkAllInput = \"input[name='\" + options.checkAll + \"']\";\n            var inputs = (options['class'] ? \"input.\" + options['class'] : \"input[name='\" + options.name + \"']\") + \":enabled\";\n            initEventHandler($grid, 'checkAllRows', 'click.yiiGridView', \"#\" + id + \" \" + checkAllInput, function () {\n                $grid.find(inputs + (this.checked ? \":not(:checked)\" : \":checked\")).prop('checked', this.checked).change();\n            });\n            var handler = function () {\n                var all = $grid.find(inputs).length == $grid.find(inputs + \":checked\").length;\n                $grid.find(checkAllInput + (all ? \":not(:checked)\" : \":checked\")).prop('checked', all).change();\n            };\n            initEventHandler($grid, 'checkRow', 'click.yiiGridView', \"#\" + id + \" \" + inputs, handler);\n            if ($grid.find(inputs).length) {\n                handler(); // Ensure \"check all\" checkbox is checked on page load if all data row checkboxes are initially checked.\n            }\n        },\n\n        getSelectedRows: function () {\n            var $grid = $(this);\n            var data = gridData[$grid.attr('id')];\n            var keys = [];\n            if (data.selectionColumn) {\n                $grid.find(\"input[name='\" + data.selectionColumn + \"']:checked\").each(function () {\n                    keys.push($(this).parent().closest('tr').data('key'));\n                });\n            }\n\n            return keys;\n        },\n\n        destroy: function () {\n            var events = ['.yiiGridView', gridEvents.beforeFilter, gridEvents.afterFilter].join(' ');\n            this.off(events);\n\n            var id = $(this).attr('id');\n            $.each(gridEventHandlers[id], function (type, data) {\n                $(document).off(data.event, data.selector);\n            });\n\n            delete gridData[id];\n\n            return this;\n        },\n\n        data: function () {\n            var id = $(this).attr('id');\n            return gridData[id];\n        }\n    };\n\n    /**\n     * Used for attaching event handler and prevent of duplicating them. With each call previously attached handler of\n     * the same type is removed even selector was changed.\n     * @param {jQuery} $gridView According jQuery grid view element\n     * @param {string} type Type of the event which acts like a key\n     * @param {string} event Event name, for example 'change.yiiGridView'\n     * @param {string} selector jQuery selector\n     * @param {function} callback The actual function to be executed with this event\n     */\n    function initEventHandler($gridView, type, event, selector, callback)\n    {\n        var id = $gridView.attr('id');\n        var prevHandler = gridEventHandlers[id];\n        if (prevHandler !== undefined && prevHandler[type] !== undefined) {\n            var data = prevHandler[type];\n            $(document).off(data.event, data.selector);\n        }\n        if (prevHandler === undefined) {\n            gridEventHandlers[id] = {};\n        }\n        $(document).on(event, selector, callback);\n        gridEventHandlers[id][type] = {event: event, selector: selector};\n    }\n})(window.jQuery);\n"],"names":["$","fn","yiiGridView","method","methods","apply","this","Array","prototype","slice","call","arguments","error","init","defaults","filterUrl","undefined","filterSelector","filterOnFocusOut","gridData","gridEvents","beforeFilter","afterFilter","gridEventHandlers","options","each","$e","settings","extend","id","attr","enterPressed","initEventHandler","event","type","keyCode","applyFilter","$grid","data","namesInFilter","serializeArray","name","push","value","Object","keys","pos","yii","getQueryParams","indexOf","replace","isArray","i","val","inArray","url","substring","hashPos","$form","find","remove","action","class","style","data-pjax","appendTo","values","index","append","Event","trigger","result","submit","setSelectionColumn","checkAllInput","inputs","selectionColumn","multiple","checkAll","checked","prop","change","handler","all","length","getSelectedRows","parent","closest","destroy","events","join","off","document","selector","$gridView","callback","prevHandler","on","window","jQuery"],"mappings":"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"}