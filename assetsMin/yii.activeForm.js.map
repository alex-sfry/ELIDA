{"version":3,"file":"yii.activeForm.js","sources":["yii.activeForm.js"],"sourcesContent":["/**\n * Yii form widget.\n *\n * This is the JavaScript widget used by the yii\\widgets\\ActiveForm widget.\n *\n * @link https://www.yiiframework.com/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license https://www.yiiframework.com/license/\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n */\n(function ($) {\n\n    $.fn.yiiActiveForm = function (method) {\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else {\n            if (typeof method === 'object' || !method) {\n                return methods.init.apply(this, arguments);\n            } else {\n                $.error('Method ' + method + ' does not exist on jQuery.yiiActiveForm');\n                return false;\n            }\n        }\n    };\n\n    var events = {\n        /**\n         * beforeValidate event is triggered before validating the whole form.\n         * The signature of the event handler should be:\n         *     function (event, messages, deferreds)\n         * where\n         *  - event: an Event object.\n         *  - messages: an associative array with keys being attribute IDs and values being error message arrays\n         *    for the corresponding attributes.\n         *  - deferreds: an array of Deferred objects. You can use deferreds.add(callback) to add a new deferred validation.\n         *\n         * If the handler returns a boolean false, it will stop further form validation after this event. And as\n         * a result, afterValidate event will not be triggered.\n         */\n        beforeValidate: 'beforeValidate',\n        /**\n         * afterValidate event is triggered after validating the whole form.\n         * The signature of the event handler should be:\n         *     function (event, messages, errorAttributes)\n         * where\n         *  - event: an Event object.\n         *  - messages: an associative array with keys being attribute IDs and values being error message arrays\n         *    for the corresponding attributes.\n         *  - errorAttributes: an array of attributes that have validation errors. Please refer to attributeDefaults for the structure of this parameter.\n         */\n        afterValidate: 'afterValidate',\n        /**\n         * beforeValidateAttribute event is triggered before validating an attribute.\n         * The signature of the event handler should be:\n         *     function (event, attribute, messages, deferreds)\n         * where\n         *  - event: an Event object.\n         *  - attribute: the attribute to be validated. Please refer to attributeDefaults for the structure of this parameter.\n         *  - messages: an array to which you can add validation error messages for the specified attribute.\n         *  - deferreds: an array of Deferred objects. You can use deferreds.add(callback) to add a new deferred validation.\n         *\n         * If the handler returns a boolean false, it will stop further validation of the specified attribute.\n         * And as a result, afterValidateAttribute event will not be triggered.\n         */\n        beforeValidateAttribute: 'beforeValidateAttribute',\n        /**\n         * afterValidateAttribute event is triggered after validating the whole form and each attribute.\n         * The signature of the event handler should be:\n         *     function (event, attribute, messages)\n         * where\n         *  - event: an Event object.\n         *  - attribute: the attribute being validated. Please refer to attributeDefaults for the structure of this parameter.\n         *  - messages: an array to which you can add additional validation error messages for the specified attribute.\n         */\n        afterValidateAttribute: 'afterValidateAttribute',\n        /**\n         * beforeSubmit event is triggered before submitting the form after all validations have passed.\n         * The signature of the event handler should be:\n         *     function (event)\n         * where event is an Event object.\n         *\n         * If the handler returns a boolean false, it will stop form submission.\n         */\n        beforeSubmit: 'beforeSubmit',\n        /**\n         * ajaxBeforeSend event is triggered before sending an AJAX request for AJAX-based validation.\n         * The signature of the event handler should be:\n         *     function (event, jqXHR, settings)\n         * where\n         *  - event: an Event object.\n         *  - jqXHR: a jqXHR object\n         *  - settings: the settings for the AJAX request\n         */\n        ajaxBeforeSend: 'ajaxBeforeSend',\n        /**\n         * ajaxComplete event is triggered after completing an AJAX request for AJAX-based validation.\n         * The signature of the event handler should be:\n         *     function (event, jqXHR, textStatus)\n         * where\n         *  - event: an Event object.\n         *  - jqXHR: a jqXHR object\n         *  - textStatus: the status of the request (\"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", or \"parsererror\").\n         */\n        ajaxComplete: 'ajaxComplete',\n        /**\n         * afterInit event is triggered after yii activeForm init.\n         * The signature of the event handler should be:\n         *     function (event)\n         * where\n         *  - event: an Event object.\n         */\n        afterInit: 'afterInit'\n    };\n\n    // NOTE: If you change any of these defaults, make sure you update yii\\widgets\\ActiveForm::getClientOptions() as well\n    var defaults = {\n        // whether to encode the error summary\n        encodeErrorSummary: true,\n        // the jQuery selector for the error summary\n        errorSummary: '.error-summary',\n        // whether to perform validation before submitting the form.\n        validateOnSubmit: true,\n        // the container CSS class representing the corresponding attribute has validation error\n        errorCssClass: 'has-error',\n        // the container CSS class representing the corresponding attribute passes validation\n        successCssClass: 'has-success',\n        // the container CSS class representing the corresponding attribute is being validated\n        validatingCssClass: 'validating',\n        // the GET parameter name indicating an AJAX-based validation\n        ajaxParam: 'ajax',\n        // the type of data that you're expecting back from the server\n        ajaxDataType: 'json',\n        // the URL for performing AJAX-based validation. If not set, it will use the the form's action\n        validationUrl: undefined,\n        // whether to scroll to first visible error after validation.\n        scrollToError: true,\n        // offset in pixels that should be added when scrolling to the first error.\n        scrollToErrorOffset: 0,\n        // where to add validation class: container or input\n        validationStateOn: 'container'\n    };\n\n    // NOTE: If you change any of these defaults, make sure you update yii\\widgets\\ActiveField::getClientOptions() as well\n    var attributeDefaults = {\n        // a unique ID identifying an attribute (e.g. \"loginform-username\") in a form\n        id: undefined,\n        // attribute name or expression (e.g. \"[0]content\" for tabular input)\n        name: undefined,\n        // the jQuery selector of the container of the input field\n        container: undefined,\n        // the jQuery selector of the input field under the context of the form\n        input: undefined,\n        // the jQuery selector of the error tag under the context of the container\n        error: '.help-block',\n        // whether to encode the error\n        encodeError: true,\n        // whether to perform validation when a change is detected on the input\n        validateOnChange: true,\n        // whether to perform validation when the input loses focus\n        validateOnBlur: true,\n        // whether to perform validation when the user is typing.\n        validateOnType: false,\n        // number of milliseconds that the validation should be delayed when a user is typing in the input field.\n        validationDelay: 500,\n        // whether to enable AJAX-based validation.\n        enableAjaxValidation: false,\n        // function (attribute, value, messages, deferred, $form), the client-side validation function.\n        validate: undefined,\n        // status of the input field, 0: empty, not entered before, 1: validated, 2: pending validation, 3: validating\n        status: 0,\n        // whether the validation is cancelled by beforeValidateAttribute event handler\n        cancelled: false,\n        // the value of the input\n        value: undefined,\n        // whether to update aria-invalid attribute after validation\n        updateAriaInvalid: true\n    };\n\n\n    var submitDefer;\n\n    var setSubmitFinalizeDefer = function ($form) {\n        submitDefer = $.Deferred();\n        $form.data('yiiSubmitFinalizePromise', submitDefer.promise());\n    };\n\n    // finalize yii.js $form.submit\n    var submitFinalize = function ($form) {\n        if (submitDefer) {\n            submitDefer.resolve();\n            submitDefer = undefined;\n            $form.removeData('yiiSubmitFinalizePromise');\n        }\n    };\n\n\n    var methods = {\n        init: function (attributes, options) {\n            return this.each(function () {\n                var $form = $(this);\n                if ($form.data('yiiActiveForm')) {\n                    return;\n                }\n\n                var settings = $.extend({}, defaults, options || {});\n                if (settings.validationUrl === undefined) {\n                    settings.validationUrl = $form.attr('action');\n                }\n\n                $.each(attributes, function (i) {\n                    attributes[i] = $.extend({value: getValue($form, this)}, attributeDefaults, this);\n                    watchAttribute($form, attributes[i]);\n                });\n\n                $form.data('yiiActiveForm', {\n                    settings: settings,\n                    attributes: attributes,\n                    submitting: false,\n                    validated: false,\n                    validate_only: false, // validate without auto submitting\n                    options: getFormOptions($form)\n                });\n\n                /**\n                 * Clean up error status when the form is reset.\n                 * Note that $form.on('reset', ...) does work because the \"reset\" event does not bubble on IE.\n                 */\n                $form.on('reset.yiiActiveForm', methods.resetForm);\n\n                if (settings.validateOnSubmit) {\n                    $form.on('mouseup.yiiActiveForm keyup.yiiActiveForm', ':submit', function () {\n                        $form.data('yiiActiveForm').submitObject = $(this);\n                    });\n                    $form.on('submit.yiiActiveForm', methods.submitForm);\n                }\n                var event = $.Event(events.afterInit);\n                $form.trigger(event);\n            });\n        },\n\n        // add a new attribute to the form dynamically.\n        // please refer to attributeDefaults for the structure of attribute\n        add: function (attribute) {\n            var $form = $(this);\n            attribute = $.extend({value: getValue($form, attribute)}, attributeDefaults, attribute);\n            $form.data('yiiActiveForm').attributes.push(attribute);\n            watchAttribute($form, attribute);\n        },\n\n        // remove the attribute with the specified ID from the form\n        remove: function (id) {\n            var $form = $(this),\n                attributes = $form.data('yiiActiveForm').attributes,\n                index = -1,\n                attribute = undefined;\n            $.each(attributes, function (i) {\n                if (attributes[i]['id'] == id) {\n                    index = i;\n                    attribute = attributes[i];\n                    return false;\n                }\n            });\n            if (index >= 0) {\n                attributes.splice(index, 1);\n                unwatchAttribute($form, attribute);\n            }\n\n            return attribute;\n        },\n\n        // manually trigger the validation of the attribute with the specified ID\n        validateAttribute: function (id) {\n            var attribute = methods.find.call(this, id);\n            if (attribute != undefined) {\n                validateAttribute($(this), attribute, true);\n            }\n        },\n\n        // find an attribute config based on the specified attribute ID\n        find: function (id) {\n            var attributes = $(this).data('yiiActiveForm').attributes,\n                result = undefined;\n            $.each(attributes, function (i) {\n                if (attributes[i]['id'] == id) {\n                    result = attributes[i];\n                    return false;\n                }\n            });\n            return result;\n        },\n\n        destroy: function () {\n            return this.each(function () {\n                $(this).off('.yiiActiveForm');\n                $(this).removeData('yiiActiveForm');\n            });\n        },\n\n        data: function () {\n            return this.data('yiiActiveForm');\n        },\n\n        // validate all applicable inputs in the form\n        validate: function (forceValidate) {\n            if (forceValidate) {\n                $(this).data('yiiActiveForm').submitting = true;\n            }\n\n            var $form = $(this),\n                data = $form.data('yiiActiveForm'),\n                needAjaxValidation = false,\n                messages = {},\n                deferreds = deferredArray(),\n                submitting = data.submitting;\n\n            if (submitting) {\n                var event = $.Event(events.beforeValidate);\n                $form.trigger(event, [messages, deferreds]);\n\n                if (event.result === false) {\n                    data.submitting = false;\n                    submitFinalize($form);\n                    return;\n                }\n            }\n\n            // client-side validation\n            $.each(data.attributes, function () {\n                this.$form = $form;\n                var $input = findInput($form, this);\n\n                var disabled = $input.toArray().reduce(function (result, next) {\n                    return result && $(next).is(':disabled');\n                }, true);\n                if (disabled) {\n                    return true;\n                }\n                // validate markup for select input\n                if ($input.length && $input[0].tagName.toLowerCase() === 'select') {\n                    var opts = $input[0].options, isEmpty = !opts || !opts.length, isRequired = $input.attr('required'),\n                        isMultiple = $input.attr('multiple'), size = $input.attr('size') || 1;\n                    // check if valid HTML markup for select input, else return validation as `true`\n                    // https://w3c.github.io/html-reference/select.html\n                    if (isRequired && !isMultiple && parseInt(size, 10) === 1) { // invalid select markup condition\n                        if (isEmpty) { // empty option elements for the select\n                            return true;\n                        }\n                        if (opts[0] && (opts[0].value !== '' && opts[0].text !== '')) { // first option is not empty\n                            return true;\n                        }\n                    }\n                }\n                this.cancelled = false;\n                // perform validation only if the form is being submitted or if an attribute is pending validation\n                if (data.submitting || this.status === 2 || this.status === 3) {\n                    var msg = messages[this.id];\n                    if (msg === undefined) {\n                        msg = [];\n                        messages[this.id] = msg;\n                    }\n\n                    var event = $.Event(events.beforeValidateAttribute);\n                    $form.trigger(event, [this, msg, deferreds]);\n                    if (event.result !== false) {\n                        if (this.validate) {\n                            this.validate(this, getValue($form, this), msg, deferreds, $form);\n                        }\n                        if (this.enableAjaxValidation) {\n                            needAjaxValidation = true;\n                        }\n                    } else {\n                        this.cancelled = true;\n                    }\n                }\n            });\n\n            // ajax validation\n            $.when.apply(this, deferreds).always(function () {\n                // Remove empty message arrays\n                for (var i in messages) {\n                    if (0 === messages[i].length) {\n                        delete messages[i];\n                    }\n                }\n                if (needAjaxValidation && ($.isEmptyObject(messages) || data.submitting)) {\n                    var $button = data.submitObject,\n                        extData = '&' + data.settings.ajaxParam + '=' + $form.attr('id');\n                    if ($button && $button.length && $button.attr('name')) {\n                        extData += '&' + $button.attr('name') + '=' + $button.attr('value');\n                    }\n                    $.ajax({\n                        url: data.settings.validationUrl,\n                        type: $form.attr('method'),\n                        data: $form.serialize() + extData,\n                        dataType: data.settings.ajaxDataType,\n                        complete: function (jqXHR, textStatus) {\n                            currentAjaxRequest = null;\n                            $form.trigger(events.ajaxComplete, [jqXHR, textStatus]);\n                        },\n                        beforeSend: function (jqXHR, settings) {\n                            currentAjaxRequest = jqXHR;\n                            $form.trigger(events.ajaxBeforeSend, [jqXHR, settings]);\n                        },\n                        success: function (msgs) {\n                            if (msgs !== null && typeof msgs === 'object') {\n                                $.each(data.attributes, function () {\n                                    if (!this.enableAjaxValidation || this.cancelled) {\n                                        delete msgs[this.id];\n                                    }\n                                });\n                                updateInputs($form, $.extend(messages, msgs), submitting);\n                            } else {\n                                updateInputs($form, messages, submitting);\n                            }\n                        },\n                        error: function () {\n                            data.submitting = false;\n                            submitFinalize($form);\n                        }\n                    });\n                } else {\n                    if (data.submitting) {\n                        // delay callback so that the form can be submitted without problem\n                        window.setTimeout(function () {\n                            updateInputs($form, messages, submitting);\n                        }, 200);\n                    } else {\n                        updateInputs($form, messages, submitting);\n                    }\n                }\n            });\n        },\n\n        submitForm: function () {\n            var $form = $(this),\n                data = $form.data('yiiActiveForm');\n            if (data.validated) {\n                // Second submit's call (from validate/updateInputs)\n                data.submitting = false;\n                var event = $.Event(events.beforeSubmit);\n                $form.trigger(event);\n                if (event.result === false) {\n                    data.validated = false;\n                    submitFinalize($form);\n                    return false;\n                }\n                updateHiddenButton($form);\n                return true;   // continue submitting the form since validation passes\n            } else {\n                // First submit's call (from yii.js/handleAction) - execute validating\n                setSubmitFinalizeDefer($form);\n\n                if (data.settings.timer !== undefined) {\n                    clearTimeout(data.settings.timer);\n                }\n                data.submitting = true;\n                methods.validate.call($form);\n                return false;\n            }\n        },\n\n        resetForm: function () {\n            var $form = $(this);\n            var data = $form.data('yiiActiveForm');\n            // Because we bind directly to a form reset event instead of a reset button (that may not exist),\n            // when this function is executed form input values have not been reset yet.\n            // Therefore we do the actual reset work through setTimeout.\n            window.setTimeout(function () {\n                $.each(data.attributes, function () {\n                    // Without setTimeout() we would get the input values that are not reset yet.\n                    this.value = getValue($form, this);\n                    this.status = 0;\n                    var $container = $form.find(this.container),\n                        $input = findInput($form, this),\n                        $errorElement = data.settings.validationStateOn === 'input' ? $input : $container;\n\n                    $errorElement.removeClass(\n                        data.settings.validatingCssClass + ' ' +\n                        data.settings.errorCssClass + ' ' +\n                        data.settings.successCssClass\n                    );\n                    $container.find(this.error).html('');\n                });\n                $form.find(data.settings.errorSummary).hide().find('ul').html('');\n            }, 1);\n        },\n\n        /**\n         * Updates error messages, input containers, and optionally summary as well.\n         * If an attribute is missing from messages, it is considered valid.\n         * @param messages array the validation error messages, indexed by attribute IDs\n         * @param summary whether to update summary as well.\n         */\n        updateMessages: function (messages, summary) {\n            var $form = $(this);\n            var data = $form.data('yiiActiveForm');\n            $.each(data.attributes, function () {\n                updateInput($form, this, messages);\n            });\n            if (summary) {\n                updateSummary($form, messages);\n            }\n        },\n\n        /**\n         * Updates error messages and input container of a single attribute.\n         * If messages is empty, the attribute is considered valid.\n         * @param id attribute ID\n         * @param messages array with error messages\n         */\n        updateAttribute: function (id, messages) {\n            var attribute = methods.find.call(this, id);\n            if (attribute != undefined) {\n                var msg = {};\n                msg[id] = messages;\n                updateInput($(this), attribute, msg);\n            }\n        }\n    };\n\n    var watchAttribute = function ($form, attribute) {\n        var $input = findInput($form, attribute);\n        if (attribute.validateOnChange) {\n            $input.on('change.yiiActiveForm', function () {\n                validateAttribute($form, attribute, false);\n            });\n        }\n        if (attribute.validateOnBlur) {\n            $input.on('blur.yiiActiveForm', function () {\n                if (attribute.status == 0 || attribute.status == 1) {\n                    validateAttribute($form, attribute, true);\n                }\n            });\n        }\n        if (attribute.validateOnType) {\n            $input.on('keyup.yiiActiveForm', function (e) {\n                if ($.inArray(e.which, [16, 17, 18, 37, 38, 39, 40]) !== -1) {\n                    return;\n                }\n                if (attribute.value !== getValue($form, attribute)) {\n                    validateAttribute($form, attribute, false, attribute.validationDelay);\n                }\n            });\n        }\n    };\n\n    var unwatchAttribute = function ($form, attribute) {\n        findInput($form, attribute).off('.yiiActiveForm');\n    };\n\n    var validateAttribute = function ($form, attribute, forceValidate, validationDelay) {\n        var data = $form.data('yiiActiveForm');\n\n        if (forceValidate) {\n            attribute.status = 2;\n        }\n        $.each(data.attributes, function () {\n            if (!isEqual(this.value, getValue($form, this))) {\n                this.status = 2;\n                forceValidate = true;\n            }\n        });\n        if (!forceValidate) {\n            return;\n        }\n\n        if (currentAjaxRequest !== null) {\n            currentAjaxRequest.abort();\n        }\n        if (data.settings.timer !== undefined) {\n            clearTimeout(data.settings.timer);\n        }\n        data.settings.timer = window.setTimeout(function () {\n            if (data.submitting || $form.is(':hidden')) {\n                return;\n            }\n            $.each(data.attributes, function () {\n                if (this.status === 2) {\n                    this.status = 3;\n\n                    var $container = $form.find(this.container),\n                        $input = findInput($form, this);\n\n                    var $errorElement = data.settings.validationStateOn === 'input' ? $input : $container;\n\n                    $errorElement.addClass(data.settings.validatingCssClass);\n                }\n            });\n            methods.validate.call($form);\n        }, validationDelay ? validationDelay : 200);\n    };\n\n    /**\n     * Compares two value whatever it objects, arrays or simple types\n     * @param val1\n     * @param val2\n     * @returns boolean\n     */\n    var isEqual = function (val1, val2) {\n        // objects\n        if (val1 instanceof Object) {\n            return isObjectsEqual(val1, val2)\n        }\n\n        // arrays\n        if (Array.isArray(val1)) {\n            return isArraysEqual(val1, val2);\n        }\n\n        // simple types\n        return val1 === val2;\n    };\n\n    /**\n     * Compares two objects\n     * @param obj1\n     * @param obj2\n     * @returns boolean\n     */\n    var isObjectsEqual = function (obj1, obj2) {\n        if (!(obj1 instanceof Object) || !(obj2 instanceof Object)) {\n            return false;\n        }\n\n        var keys1 = Object.keys(obj1);\n        var keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (var i = 0; i < keys1.length; i += 1) {\n            if (!obj2.hasOwnProperty(keys1[i])) {\n                return false;\n            }\n            if (obj1[keys1[i]] !== obj2[keys1[i]]) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Compares two arrays\n     * @param arr1\n     * @param arr2\n     * @returns boolean\n     */\n    var isArraysEqual = function (arr1, arr2) {\n        if (!Array.isArray(arr1) || !Array.isArray(arr2)) {\n            return false;\n        }\n\n        if (arr1.length !== arr2.length) {\n            return false;\n        }\n        for (var i = 0; i < arr1.length; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Returns an array prototype with a shortcut method for adding a new deferred.\n     * The context of the callback will be the deferred object so it can be resolved like ```this.resolve()```\n     * @returns Array\n     */\n    var deferredArray = function () {\n        var array = [];\n        array.add = function (callback) {\n            this.push(new $.Deferred(callback));\n        };\n        return array;\n    };\n\n    var buttonOptions = ['action', 'target', 'method', 'enctype'];\n\n    /**\n     * Returns current form options\n     * @param $form\n     * @returns object Object with button of form options\n     */\n    var getFormOptions = function ($form) {\n        var attributes = {};\n        for (var i = 0; i < buttonOptions.length; i++) {\n            attributes[buttonOptions[i]] = $form.attr(buttonOptions[i]);\n        }\n\n        return attributes;\n    };\n\n    /**\n     * Applies temporary form options related to submit button\n     * @param $form the form jQuery object\n     * @param $button the button jQuery object\n     */\n    var applyButtonOptions = function ($form, $button) {\n        for (var i = 0; i < buttonOptions.length; i++) {\n            var value = $button.attr('form' + buttonOptions[i]);\n            if (value) {\n                $form.attr(buttonOptions[i], value);\n            }\n        }\n    };\n\n    /**\n     * Restores original form options\n     * @param $form the form jQuery object\n     */\n    var restoreButtonOptions = function ($form) {\n        var data = $form.data('yiiActiveForm');\n\n        for (var i = 0; i < buttonOptions.length; i++) {\n            $form.attr(buttonOptions[i], data.options[buttonOptions[i]] || null);\n        }\n    };\n\n    /**\n     * Updates the error messages and the input containers for all applicable attributes\n     * @param $form the form jQuery object\n     * @param messages array the validation error messages\n     * @param submitting whether this method is called after validation triggered by form submission\n     */\n    var updateInputs = function ($form, messages, submitting) {\n        var data = $form.data('yiiActiveForm');\n\n        if (data === undefined) {\n            return false;\n        }\n\n        var errorAttributes = [], $input;\n        $.each(data.attributes, function () {\n            var hasError = (submitting && updateInput($form, this, messages)) || (!submitting && attrHasError($form, this, messages));\n            $input = findInput($form, this);\n\n            if (!$input.is(':disabled') && !this.cancelled && hasError) {\n                errorAttributes.push(this);\n            }\n        });\n\n        $form.trigger(events.afterValidate, [messages, errorAttributes]);\n\n        if (submitting) {\n            updateSummary($form, messages);\n            if (errorAttributes.length) {\n                if (data.settings.scrollToError) {\n                    var h = $(document).height(), top = $form.find($.map(errorAttributes, function (attribute) {\n                        return attribute.input;\n                    }).join(',')).first().closest(':visible').offset().top - data.settings.scrollToErrorOffset;\n                    top = top < 0 ? 0 : (top > h ? h : top);\n                    var wtop = $(window).scrollTop();\n                    if (top < wtop || top > wtop + $(window).height()) {\n                        $(window).scrollTop(top);\n                    }\n                }\n                data.submitting = false;\n            } else {\n                data.validated = true;\n                if (!data.validate_only) {\n                    if (data.submitObject) {\n                        applyButtonOptions($form, data.submitObject);\n                    }\n                    $form.submit();\n                    if (data.submitObject) {\n                        restoreButtonOptions($form);\n                    }\n                }\n            }\n        } else {\n            $.each(data.attributes, function () {\n                if (!this.cancelled && (this.status === 2 || this.status === 3)) {\n                    updateInput($form, this, messages);\n                }\n            });\n        }\n        submitFinalize($form);\n    };\n\n    /**\n     * Updates hidden field that represents clicked submit button.\n     * @param $form the form jQuery object.\n     */\n    var updateHiddenButton = function ($form) {\n        var data = $form.data('yiiActiveForm');\n        var $button = data.submitObject || $form.find(':submit:first');\n        // TODO: if the submission is caused by \"change\" event, it will not work\n        if ($button.length && $button.attr('type') == 'submit' && $button.attr('name')) {\n            // simulate button input value\n            var $hiddenButton = $('input[type=\"hidden\"][name=\"' + $button.attr('name') + '\"]', $form);\n            if (!$hiddenButton.length) {\n                $('<input>').attr({\n                    type: 'hidden',\n                    name: $button.attr('name'),\n                    value: $button.attr('value')\n                }).appendTo($form);\n            } else {\n                $hiddenButton.attr('value', $button.attr('value'));\n            }\n        }\n    };\n\n    /**\n     * Updates the error message and the input container for a particular attribute.\n     * @param $form the form jQuery object\n     * @param attribute object the configuration for a particular attribute.\n     * @param messages array the validation error messages\n     * @return boolean whether there is a validation error for the specified attribute\n     */\n    var updateInput = function ($form, attribute, messages) {\n        var data = $form.data('yiiActiveForm'),\n            $input = findInput($form, attribute),\n            hasError = attrHasError($form, attribute, messages);\n\n        if (!$.isArray(messages[attribute.id])) {\n            messages[attribute.id] = [];\n        }\n\n        attribute.status = 1;\n        if ($input.length) {\n            var $container = $form.find(attribute.container);\n            var $error = $container.find(attribute.error);\n            updateAriaInvalid($form, attribute, hasError);\n\n            var $errorElement = data.settings.validationStateOn === 'input' ? $input : $container;\n\n            if (hasError) {\n                if (attribute.encodeError) {\n                    $error.text(messages[attribute.id][0]);\n                } else {\n                    $error.html(messages[attribute.id][0]);\n                }\n                $errorElement.removeClass(data.settings.validatingCssClass + ' ' + data.settings.successCssClass)\n                    .addClass(data.settings.errorCssClass);\n            } else {\n                $error.empty();\n                $errorElement.removeClass(data.settings.validatingCssClass + ' ' + data.settings.errorCssClass + ' ')\n                    .addClass(data.settings.successCssClass);\n            }\n            attribute.value = getValue($form, attribute);\n        }\n\n        $form.trigger(events.afterValidateAttribute, [attribute, messages[attribute.id]]);\n\n        return hasError;\n    };\n\n    /**\n     * Checks if a particular attribute has an error\n     * @param $form the form jQuery object\n     * @param attribute object the configuration for a particular attribute.\n     * @param messages array the validation error messages\n     * @return boolean whether there is a validation error for the specified attribute\n     */\n    var attrHasError = function ($form, attribute, messages) {\n        var $input = findInput($form, attribute),\n            hasError = false;\n\n        if (!$.isArray(messages[attribute.id])) {\n            messages[attribute.id] = [];\n        }\n\n        if ($input.length) {\n            hasError = messages[attribute.id].length > 0;\n        }\n\n        return hasError;\n    };\n\n    /**\n     * Updates the error summary.\n     * @param $form the form jQuery object\n     * @param messages array the validation error messages\n     */\n    var updateSummary = function ($form, messages) {\n        var data = $form.data('yiiActiveForm'),\n            $summary = $form.find(data.settings.errorSummary),\n            $ul = $summary.find('ul').empty();\n\n        if ($summary.length && messages) {\n            $.each(data.attributes, function () {\n                if ($.isArray(messages[this.id]) && messages[this.id].length) {\n                    var error = $('<li/>');\n                    if (data.settings.encodeErrorSummary) {\n                        error.text(messages[this.id][0]);\n                    } else {\n                        error.html(messages[this.id][0]);\n                    }\n                    $ul.append(error);\n                }\n            });\n            $summary.toggle($ul.find('li').length > 0);\n        }\n    };\n\n    var getValue = function ($form, attribute) {\n        var $input = findInput($form, attribute);\n        var type = $input.attr('type');\n        if (type === 'checkbox' || type === 'radio') {\n            var $realInput = $input.filter(':checked');\n            if ($realInput.length > 1) {\n                var values = [];\n                $realInput.each(function (index) {\n                    values.push($($realInput.get(index)).val());\n                });\n                return values;\n            }\n\n            if (!$realInput.length) {\n                $realInput = $form.find('input[type=hidden][name=\"' + $input.attr('name') + '\"]');\n            }\n\n            return $realInput.val();\n        } else {\n            return $input.val();\n        }\n    };\n\n    var findInput = function ($form, attribute) {\n        var $input = $form.find(attribute.input);\n        if ($input.length && $input[0].tagName.toLowerCase() === 'div') {\n            // checkbox list or radio list\n            return $input.find('input');\n        } else {\n            return $input;\n        }\n    };\n\n    var updateAriaInvalid = function ($form, attribute, hasError) {\n        if (attribute.updateAriaInvalid) {\n            $form.find(attribute.input).attr('aria-invalid', hasError ? 'true' : 'false');\n        }\n    }\n\n    var currentAjaxRequest = null;\n\n})(window.jQuery);\n"],"names":["$","submitFinalize","$form","submitDefer","resolve","undefined","removeData","fn","yiiActiveForm","method","methods","apply","this","Array","prototype","slice","call","arguments","error","init","events","defaults","encodeErrorSummary","errorSummary","validateOnSubmit","errorCssClass","successCssClass","validatingCssClass","ajaxParam","ajaxDataType","validationUrl","scrollToError","scrollToErrorOffset","validationStateOn","attributeDefaults","id","name","container","input","encodeError","validateOnChange","validateOnBlur","validateOnType","validationDelay","enableAjaxValidation","validate","status","cancelled","value","updateAriaInvalid","attributes","options","each","event","data","settings","extend","attr","i","getValue","watchAttribute","submitting","validated","validate_only","getFormOptions","on","resetForm","submitObject","submitForm","Event","trigger","add","attribute","push","remove","index","splice","unwatchAttribute","validateAttribute","find","result","destroy","off","forceValidate","needAjaxValidation","messages","deferreds","deferredArray","$input","findInput","toArray","reduce","next","is","length","tagName","toLowerCase","opts","isEmpty","isRequired","isMultiple","size","parseInt","text","msg","when","always","$button","extData","isEmptyObject","ajax","url","type","serialize","dataType","complete","jqXHR","textStatus","currentAjaxRequest","beforeSend","success","msgs","updateInputs","window","setTimeout","updateHiddenButton","Deferred","promise","timer","clearTimeout","$container","removeClass","html","hide","updateMessages","summary","updateInput","updateSummary","updateAttribute","e","inArray","which","isEqual","abort","addClass","val1","val2","Object","isObjectsEqual","isArray","isArraysEqual","obj1","obj2","keys1","keys","keys2","hasOwnProperty","arr1","arr2","array","callback","buttonOptions","top","wtop","errorAttributes","hasError","attrHasError","h","document","height","map","join","first","closest","offset","scrollTop","applyButtonOptions","submit","restoreButtonOptions","$hiddenButton","appendTo","$error","$errorElement","empty","$summary","$ul","append","toggle","$realInput","values","filter","get","val","jQuery"],"mappings":"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"}