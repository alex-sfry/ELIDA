{"version":3,"file":"yii.validation.js","sources":["yii.validation.js"],"sourcesContent":["/**\n * Yii validation module.\n *\n * This JavaScript module provides the validation methods for the built-in validators.\n *\n * @link https://www.yiiframework.com/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license https://www.yiiframework.com/license/\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n */\n\nyii.validation = (function ($) {\n    var pub = {\n        isEmpty: function (value) {\n            return value === null || value === undefined || ($.isArray(value) && value.length === 0) || value === '';\n        },\n\n        addMessage: function (messages, message, value) {\n            messages.push(message.replace(/\\{value\\}/g, value));\n        },\n\n        required: function (value, messages, options) {\n            var valid = false;\n            if (options.requiredValue === undefined) {\n                var isString = typeof value == 'string' || value instanceof String;\n                if (options.strict && value !== undefined || !options.strict && !pub.isEmpty(isString ? trimString(value) : value)) {\n                    valid = true;\n                }\n            } else if (!options.strict && value == options.requiredValue || options.strict && value === options.requiredValue) {\n                valid = true;\n            }\n\n            if (!valid) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        // \"boolean\" is a reserved keyword in older versions of ES so it's quoted for IE < 9 support\n        'boolean': function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n            var valid = !options.strict && (value == options.trueValue || value == options.falseValue)\n                || options.strict && (value === options.trueValue || value === options.falseValue);\n\n            if (!valid) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        string: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            if (typeof value !== 'string') {\n                pub.addMessage(messages, options.message, value);\n                return;\n            }\n\n            if (options.is !== undefined && value.length != options.is) {\n                pub.addMessage(messages, options.notEqual, value);\n                return;\n            }\n            if (options.min !== undefined && value.length < options.min) {\n                pub.addMessage(messages, options.tooShort, value);\n            }\n            if (options.max !== undefined && value.length > options.max) {\n                pub.addMessage(messages, options.tooLong, value);\n            }\n        },\n\n        file: function (attribute, messages, options) {\n            var files = getUploadedFiles(attribute, messages, options);\n            $.each(files, function (i, file) {\n                validateFile(file, messages, options);\n            });\n        },\n\n        image: function (attribute, messages, options, deferredList) {\n            var files = getUploadedFiles(attribute, messages, options);\n            $.each(files, function (i, file) {\n                validateFile(file, messages, options);\n\n                // Skip image validation if FileReader API is not available\n                if (typeof FileReader === \"undefined\") {\n                    return;\n                }\n\n                var deferred = $.Deferred();\n                pub.validateImage(file, messages, options, deferred, new FileReader(), new Image());\n                deferredList.push(deferred);\n            });\n        },\n\n        validateImage: function (file, messages, options, deferred, fileReader, image) {\n            image.onload = function () {\n                validateImageSize(file, image, messages, options);\n                deferred.resolve();\n            };\n\n            image.onerror = function () {\n                messages.push(options.notImage.replace(/\\{file\\}/g, file.name));\n                deferred.resolve();\n            };\n\n            fileReader.onload = function () {\n                image.src = this.result;\n            };\n\n            // Resolve deferred if there was error while reading data\n            fileReader.onerror = function () {\n                deferred.resolve();\n            };\n\n            fileReader.readAsDataURL(file);\n        },\n\n        number: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            if (typeof value === 'string' && !options.pattern.test(value)) {\n                pub.addMessage(messages, options.message, value);\n                return;\n            }\n\n            if (options.min !== undefined && value < options.min) {\n                pub.addMessage(messages, options.tooSmall, value);\n            }\n            if (options.max !== undefined && value > options.max) {\n                pub.addMessage(messages, options.tooBig, value);\n            }\n        },\n\n        range: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            if (!options.allowArray && $.isArray(value)) {\n                pub.addMessage(messages, options.message, value);\n                return;\n            }\n\n            var inArray = true;\n\n            $.each($.isArray(value) ? value : [value], function (i, v) {\n                if ($.inArray(v, options.range) == -1) {\n                    inArray = false;\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n\n            if (options.not === undefined) {\n                options.not = false;\n            }\n\n            if (options.not === inArray) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        regularExpression: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            if (!options.not && !options.pattern.test(value) || options.not && options.pattern.test(value)) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        email: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            var valid = true,\n                regexp = /^((?:\"?([^\"]*)\"?\\s)?)(?:\\s+)?(?:(<?)((.+)@([^>]+))(>?))$/,\n                matches = regexp.exec(value);\n\n            if (matches === null) {\n                valid = false;\n            } else {\n                var localPart = matches[5],\n                    domain = matches[6];\n\n                if (options.enableIDN) {\n                    localPart = punycode.toASCII(localPart);\n                    domain = punycode.toASCII(domain);\n\n                    value = matches[1] + matches[3] + localPart + '@' + domain + matches[7];\n                }\n\n                if (localPart.length > 64) {\n                    valid = false;\n                } else if ((localPart + '@' + domain).length > 254) {\n                    valid = false;\n                } else {\n                    valid = options.pattern.test(value) || (options.allowName && options.fullPattern.test(value));\n                }\n            }\n\n            if (!valid) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        url: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            if (options.defaultScheme && !/:\\/\\//.test(value)) {\n                value = options.defaultScheme + '://' + value;\n            }\n\n            var valid = true;\n\n            if (options.enableIDN) {\n                var matches = /^([^:]+):\\/\\/([^\\/]+)(.*)$/.exec(value);\n                if (matches === null) {\n                    valid = false;\n                } else {\n                    value = matches[1] + '://' + punycode.toASCII(matches[2]) + matches[3];\n                }\n            }\n\n            if (!valid || !options.pattern.test(value)) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        trim: function ($form, attribute, options, value) {\n            var $input = $form.find(attribute.input);\n            if ($input.is(':checkbox, :radio')) {\n                return value;\n            }\n\n            value = $input.val();\n            if (\n                (!options.skipOnEmpty || !pub.isEmpty(value))\n                && (!options.skipOnArray || !Array.isArray(value))\n            ) {\n                if (Array.isArray(value)) {\n                    for (var i = 0; i < value.length; i++) {\n                        value[i] = trimString(value[i], options);\n                    }\n                } else {\n                    value = trimString(value, options);\n                }\n                $input.val(value);\n            }\n\n            return value;\n        },\n\n        captcha: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            // CAPTCHA may be updated via AJAX and the updated hash is stored in body data\n            var hash = $('body').data(options.hashKey);\n            hash = hash == null ? options.hash : hash[options.caseSensitive ? 0 : 1];\n            var v = options.caseSensitive ? value : value.toLowerCase();\n            for (var i = v.length - 1, h = 0; i >= 0; --i) {\n                h += v.charCodeAt(i) << i;\n            }\n            if (h != hash) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        compare: function (value, messages, options, $form) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            var compareValue,\n                valid = true;\n            if (options.compareAttribute === undefined) {\n                compareValue = options.compareValue;\n            } else {\n                var $target = $('#' + options.compareAttribute);\n                if (!$target.length) {\n                    $target = $form.find('[name=\"' + options.compareAttributeName + '\"]');\n                }\n                compareValue = $target.val();\n            }\n\n            if (options.type === 'number') {\n                value = value ? parseFloat(value) : 0;\n                compareValue = compareValue ? parseFloat(compareValue) : 0;\n            }\n            switch (options.operator) {\n                case '==':\n                    valid = value == compareValue;\n                    break;\n                case '===':\n                    valid = value === compareValue;\n                    break;\n                case '!=':\n                    valid = value != compareValue;\n                    break;\n                case '!==':\n                    valid = value !== compareValue;\n                    break;\n                case '>':\n                    valid = value > compareValue;\n                    break;\n                case '>=':\n                    valid = value >= compareValue;\n                    break;\n                case '<':\n                    valid = value < compareValue;\n                    break;\n                case '<=':\n                    valid = value <= compareValue;\n                    break;\n                default:\n                    valid = false;\n                    break;\n            }\n\n            if (!valid) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        ip: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            var negation = null,\n                cidr = null,\n                matches = new RegExp(options.ipParsePattern).exec(value);\n            if (matches) {\n                negation = matches[1] || null;\n                value = matches[2];\n                cidr = matches[4] || null;\n            }\n\n            if (options.subnet === true && cidr === null) {\n                pub.addMessage(messages, options.messages.noSubnet, value);\n                return;\n            }\n            if (options.subnet === false && cidr !== null) {\n                pub.addMessage(messages, options.messages.hasSubnet, value);\n                return;\n            }\n            if (options.negation === false && negation !== null) {\n                pub.addMessage(messages, options.messages.message, value);\n                return;\n            }\n\n            var ipVersion = value.indexOf(':') === -1 ? 4 : 6;\n            if (ipVersion == 6) {\n                if (!(new RegExp(options.ipv6Pattern)).test(value)) {\n                    pub.addMessage(messages, options.messages.message, value);\n                }\n                if (!options.ipv6) {\n                    pub.addMessage(messages, options.messages.ipv6NotAllowed, value);\n                }\n            } else {\n                if (!(new RegExp(options.ipv4Pattern)).test(value)) {\n                    pub.addMessage(messages, options.messages.message, value);\n                }\n                if (!options.ipv4) {\n                    pub.addMessage(messages, options.messages.ipv4NotAllowed, value);\n                }\n            }\n        }\n    };\n\n    function getUploadedFiles(attribute, messages, options)\n    {\n        // Skip validation if File API is not available\n        if (typeof File === \"undefined\") {\n            return [];\n        }\n\n        var fileInput = $(attribute.input, attribute.$form).get(0);\n\n        // Skip validation if file input does not exist\n        // (in case file inputs are added dynamically and no file input has been added to the form)\n        if (typeof fileInput === \"undefined\") {\n            return [];\n        }\n\n        var files = fileInput.files;\n        if (!files) {\n            messages.push(options.message);\n            return [];\n        }\n\n        if (files.length === 0) {\n            if (!options.skipOnEmpty) {\n                messages.push(options.uploadRequired);\n            }\n\n            return [];\n        }\n\n        if (options.maxFiles && options.maxFiles < files.length) {\n            messages.push(options.tooMany);\n            return [];\n        }\n\n        return files;\n    }\n\n    function validateFile(file, messages, options)\n    {\n        if (options.extensions && options.extensions.length > 0) {\n            var found = false;\n            var filename = file.name.toLowerCase();\n\n            for (var index = 0; index < options.extensions.length; index++) {\n                var ext = options.extensions[index].toLowerCase();\n                if ((ext === '' && filename.indexOf('.') === -1) || (filename.substr(filename.length - options.extensions[index].length - 1) === ('.' + ext))) {\n                    found = true;\n                    break;\n                }\n            }\n\n            if (!found) {\n                messages.push(options.wrongExtension.replace(/\\{file\\}/g, file.name));\n            }\n        }\n\n        if (options.mimeTypes && options.mimeTypes.length > 0) {\n            if (!validateMimeType(options.mimeTypes, file.type)) {\n                messages.push(options.wrongMimeType.replace(/\\{file\\}/g, file.name));\n            }\n        }\n\n        if (options.maxSize && options.maxSize < file.size) {\n            messages.push(options.tooBig.replace(/\\{file\\}/g, file.name));\n        }\n\n        if (options.minSize && options.minSize > file.size) {\n            messages.push(options.tooSmall.replace(/\\{file\\}/g, file.name));\n        }\n    }\n\n    function validateMimeType(mimeTypes, fileType)\n    {\n        for (var i = 0, len = mimeTypes.length; i < len; i++) {\n            if (new RegExp(mimeTypes[i]).test(fileType)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function validateImageSize(file, image, messages, options)\n    {\n        if (options.minWidth && image.width < options.minWidth) {\n            messages.push(options.underWidth.replace(/\\{file\\}/g, file.name));\n        }\n\n        if (options.maxWidth && image.width > options.maxWidth) {\n            messages.push(options.overWidth.replace(/\\{file\\}/g, file.name));\n        }\n\n        if (options.minHeight && image.height < options.minHeight) {\n            messages.push(options.underHeight.replace(/\\{file\\}/g, file.name));\n        }\n\n        if (options.maxHeight && image.height > options.maxHeight) {\n            messages.push(options.overHeight.replace(/\\{file\\}/g, file.name));\n        }\n    }\n\n    /**\n     * PHP: `trim($path, ' /')`, JS: `yii.helpers.trim(path, {chars: ' /'})`\n     */\n    function trimString(value, options = {skipOnEmpty: true, chars: null})\n    {\n        if (options.skipOnEmpty !== false && pub.isEmpty(value)) {\n            return value;\n        }\n\n        value = new String(value);\n        if (options.chars || !String.prototype.trim) {\n            var chars = !options.chars\n                ? ' \\\\s\\xA0'\n                : options.chars.replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^\\:])/g, '\\$1');\n\n            return value.replace(new RegExp('^[' + chars + ']+|[' + chars + ']+$', 'g'), '');\n        }\n\n        return value.trim();\n    }\n\n    return pub;\n})(jQuery);\n"],"names":["yii","validation","$","pub","isEmpty","value","isArray","length","addMessage","messages","message","push","replace","required","options","isString","valid","undefined","requiredValue","String","strict","trimString","boolean","skipOnEmpty","trueValue","falseValue","string","is","notEqual","min","tooShort","max","tooLong","file","attribute","files","getUploadedFiles","each","i","validateFile","image","deferredList","deferred","FileReader","Deferred","validateImage","Image","fileReader","onload","validateImageSize","minWidth","width","underWidth","name","maxWidth","overWidth","minHeight","height","underHeight","maxHeight","overHeight","resolve","onerror","notImage","src","this","result","readAsDataURL","number","pattern","test","tooSmall","tooBig","range","inArray","allowArray","v","not","regularExpression","email","matches","localPart","domain","exec","enableIDN","punycode","toASCII","allowName","fullPattern","url","defaultScheme","trim","$form","$input","find","input","val","skipOnArray","Array","captcha","hash","data","hashKey","caseSensitive","toLowerCase","h","charCodeAt","compare","$target","compareValue","compareAttribute","compareAttributeName","type","parseFloat","operator","ip","negation","cidr","RegExp","ipParsePattern","subnet","noSubnet","hasSubnet","indexOf","ipv6Pattern","ipv6","ipv6NotAllowed","ipv4Pattern","ipv4","ipv4NotAllowed","File","fileInput","get","uploadRequired","maxFiles","tooMany","extensions","found","filename","index","ext","substr","wrongExtension","mimeTypes","validateMimeType","fileType","len","wrongMimeType","maxSize","size","minSize","chars","prototype","jQuery"],"mappings":"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"}