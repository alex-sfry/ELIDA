{"version":3,"sources":["alext/BootstrapTable/assets/Pagination.js"],"names":["Pagination","maxPageBtnQty","fetchData","paginationHTML","table","this","data","prototype","getCurrentDataPage","$","attr","pageBtnFirstNum","$pageNumBtns","links","last","current","totalCount","limit","pageBtnLastNum","parseInt","clsBegin","eq","clsEnd","length","pageBtnQty","next","let","html","first","prev","pageNum","i","href","substring","cls","text","e","preventDefault","renderNewPageBtns","currentTarget","parent","is","await","setEventListeners","lastPage","resetPagination","on","handleClick"],"mappings":"AAAO,SAASA,WAAWC,EAAeC,EAAWC,EAAiB,KAAMC,EAAQ,MAChFC,KAAKH,UAAYA,EACjBG,KAAKJ,cAAgBA,EACrBI,KAAKF,eAAiBA,EACtBE,KAAKC,KAAO,KACZD,KAAKD,MAAQA,CACjB,CAEAJ,WACaO,UAAAC,mBAAsB,WAClC,OAAAC,EAAA,eAAA,EAAAC,KAAA,WAAA,CAEDV,EAAAA,WAEUW,UAAAA,kBAA2BC,SAAeC,EAAIH,EAAKI,EAAAC,EAAiBC,EAAAC,EAAAhB,GAC1E,IAAMiB,EAAiBC,EAAAA,iBAASP,EAC1BQ,EAAoBD,SAAIP,EAAAS,GAAoB,CAAA,EAAGX,KAAA,WAAW,CAAA,EAAA,EAC1DY,EAAkBR,SAAOF,EAAAS,GAAAT,EAAuBW,OAAW,CAAA,EAAAb,KAAA,WAAA,CAAA,EAAA,EAC3Dc,EAAavB,IAAAA,EAAa,qBAAWA,YAEnCqB,EACJG,IAAAX,EAAA,qBAAyCM,YAEzCI,EAAAvB,GAAAa,EAAAb,EAAAa,EAERY,IAAAC,2CACAP,YAAAP,EAAAe,sCACAD;4BAGgCP,YAAmBP,EAAMgB,oBAAYJ,EAAA;;;mBADjE,IAOSC,IAAMI,EAAAA,EAAOC,EAAGb,EAAAA,CAAc,GAAGO,CACrC,IAAMO,EAAAnB,EAAAe,MAAAK,UAAA,EAAApB,EAAAe,MAAAL,OAAA,CAAA,EACHG,IAAID,EAehB,IAAAS,GAVoBJ,EAHDA,EAANL,EACLX,EAAA,GAAAW,EAEmBX,GAASU,EAAG,GAAAO,EAEVb,EAAAO,EAAA,EAAAA,GAAAD,EAAA,GAAAO,EAAApB,EAAAoB,EAE7BN,GAAA,EACI,EAAAM,EAEIN,EAAAd,EAAA,EAAAc,EAAA,EAAAM,EAAApB,EAAAoB,KAGRN,EAAA,mBAAA,YACAE,iBAEQO;qDACyCrB,IAAUiB,iBAAwBA,EAAA,MAAAA;0BAG7E,CASFH,GAREA;gCAGsBL,YAAAT,EAAAY,oBAAAA,EAAA;;;;gCAORH,YAAAT,EAAAC,oBAAAA,EAAA;uBAKZR,EAAI,aACJ,EAAIqB,KAACnB,CAAAA,EAAsBC,EAAA,eAAA,EAAA0B,KAAA9B,KAAAG,mBAAA,EAAAS,EAAA;WACtBD,EAAUC,EACVA,EAAKQ,EAAAR,EAAAD,OAAAA,CAAA,EACVX,KAAKJ,kBACR,CACL,EAfAD,WAkBMO,UAAiB4B,YAAYlB,eAAgBmB,GAE/CA,EAAIC,eAACC,EAEE7B,EAAA2B,EAAAG,aAAA,EAAAC,OAAA,EAAAC,GAAA,SAAA,IACKnC,EACPoC,MAAArC,KAAAH,UAAAO,EAAA2B,EAAAG,aAAA,EAAA7B,KAAA,MAAA,CAAA,EAAEL,KAAAC,KAAAA,EAEID,KAAAiC,kBACFrC,EAAAA,MAEJ0C,EAAAA,KAAAA,EACRrC,EAAAsC,SAED5C,KAAWO,mBAAUoC,EACfrC,EAAAU,WACLV,EAAAW,MArBOZ,KAAKJ,aACT,EACJ,EAEAD,WAAWO,UAAUsC,gBAAkB,SAAS5B,EAAOD,EAAYH,EAAO+B,GACtEnC,EAAE,eAAe,EAAE0B,KAAQ,EAAIlB,EAAQ,QAAO,CAAIA,OAAWD,CAAY,EAEzEX,KAAKiC,kBACDzB,EACA,EACA+B,EACA,EACA5B,EACAC,EACAZ,KAAKJ,aACT,EACAI,KAAKsC,kBAAkB,CAC3B,EAEA3C,WAAWO,UAAUoC,kBAAoB,WACrClC,EAAE,yBAAyB,EAAEqC,GAAG,QAAUV,GAAM/B,KAAK0C,YAAYX,CAAC,CAAC,CACvE,SArGgBpC,UAqGf","file":"Pagination.min.js","sourcesContent":["export function Pagination(maxPageBtnQty, fetchData, paginationHTML = null, table = null) {\r\n    this.fetchData = fetchData;\r\n    this.maxPageBtnQty = maxPageBtnQty;\r\n    this.paginationHTML = paginationHTML;\r\n    this.data = null;\r\n    this.table = table;\r\n}\r\n\r\nPagination.prototype.getCurrentDataPage = function() {\r\n    return $('li.active > a').attr('data-page');\r\n};\r\n\r\nPagination.prototype.renderNewPageBtns = function(links, next, last, current, totalCount, limit, maxPageBtnQty) {\r\n    const $pageNumBtns = $('li > .page-link');\r\n    const pageBtnFirstNum = parseInt($pageNumBtns.eq(2).attr('data-page')) + 1;\r\n    const pageBtnLastNum = parseInt($pageNumBtns.eq($pageNumBtns.length - 3).attr('data-page')) + 1;\r\n    const clsBegin = next === 1 ? 'page-link disabled' : 'page-link';\r\n    const clsEnd = next === last ? 'page-link disabled' : 'page-link';\r\n    const pageBtnQty = maxPageBtnQty <= last ? maxPageBtnQty : last;\r\n\r\n    let html =\r\n        `<li class=\"page-item first\"><a class=\"${clsBegin}\" href=\"${links.first}\" data-page=\"0\">first</a></li>`;\r\n    html +=\r\n        `<li class=\"page-item prev-page\">\r\n                <a class=\"${clsBegin}\" href=\"${links.prev}\" data-page=\"${next - 1}\">\r\n                    <span aria-hidden=\"true\">«</span>\r\n                </a>\r\n            </li>`;\r\n\r\n    for (let i = 0; i < pageBtnQty; i++) {\r\n        const href = links.first.substring(0, links.first.length - 1);\r\n        let pageNum;\r\n\r\n        if (next > current) {\r\n            if (next >= last - 1) {\r\n                pageNum = last - (pageBtnQty - 1) + i;\r\n            } else pageNum = pageBtnLastNum - next < 2 ? (next - (pageBtnQty - 3)) + i : pageBtnFirstNum + i;\r\n        } else {\r\n            if (next <= 2) {\r\n                pageNum = 1 + i;\r\n            } else pageNum = next - pageBtnFirstNum < 2 ? (next - 2) + i : pageBtnFirstNum + i;\r\n        }\r\n\r\n        const cls = pageNum === next ? 'page-item active' : 'page-item';\r\n        html +=\r\n            `<li class=\"${cls}\">\r\n                        <a class=\"page-link\" href=\"${href}${pageNum}\" data-page=\"${pageNum - 1}\">${pageNum}</a>\r\n                    </li>`;\r\n    }\r\n    html +=\r\n        `<li class=\"page-item next-page\">\r\n                    <a class=\"${clsEnd}\" href=\"${links.next}\" data-page=\"${next - 1}\">\r\n                        <span aria-hidden=\"true\">»</span>\r\n                    </a>\r\n                </li>`;\r\n    html +=\r\n        `<li class=\"page-item last\">\r\n                    <a class=\"${clsEnd}\" href=\"${links.last}\" data-page=\"${last - 1}\">last</a>\r\n                </li>`;\r\n\r\n    $('.pagination').html(html);\r\n    $('.page-counter').text(`${this.getCurrentDataPage() * limit + 1} \r\n       - ${next * limit < totalCount ? next * limit : totalCount} / ${totalCount}`);\r\n\r\n    this.setEventListeners();\r\n};\r\n\r\nPagination.prototype.handleClick = async function (e) {\r\n    e.preventDefault();\r\n    if ($(e.currentTarget).parent().is('.active')) return;\r\n    const data = await this.fetchData($(e.currentTarget).attr('href'));\r\n    this.data = data;\r\n\r\n    this.renderNewPageBtns(\r\n        data.links,\r\n        data.page + 1, // zero based next page received from backend + 1\r\n        data.lastPage,\r\n        this.getCurrentDataPage(), // zero based current page\r\n        data.totalCount,\r\n        data.limit, // qty per page\r\n        this.maxPageBtnQty\r\n    );\r\n};\r\n\r\nPagination.prototype.resetPagination = function(limit, totalCount, links, lastPage) {\r\n    $('.page-counter').text(`${0 * limit + 1} - ${1 * limit} / ${totalCount}`);\r\n\r\n    this.renderNewPageBtns(\r\n        links,\r\n        1, // zero based next page received from backend + 1\r\n        lastPage,\r\n        0, // zero based current page\r\n        totalCount,\r\n        limit, // qty per page\r\n        this.maxPageBtnQty\r\n    );\r\n    this.setEventListeners();\r\n};\r\n\r\nPagination.prototype.setEventListeners = function() {\r\n    $('.page-item > .page-link').on('click', (e) => this.handleClick(e));\r\n};\r\n"]}