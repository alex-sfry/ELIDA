{"version":3,"sources":["alext/BootstrapTable/assets/BootstrapTable.js"],"names":["Pagination","SortTable","Table","$pagination","$table_columns","$","table","each","push","this","attr","fillTable","val","proxyHandler","set","target","prop","pagination","data","sortTable","loaderCnt","Proxy","fetchData","html","disableLoader","removeClass","async","url","method","body","addClass","res","await","fetch","error","message","mode","headers","Accept","Content-Type","ok","json","console","log","setEventListeners"],"mappings":"OAASA,UAAmC,KAAjB,yBAClBC,SAAiC,KAAhB,wBACjBC,KAAyB,KAAZ,aAGtB,IAAMC,OAAAA,EAAW,WAAK,EAEhBC,YAAcC,EAAA,aAAK,EAGrBD,eAAqB,GAQbE,OALZD,EAAA,aAAc,EAAAE,KAAIL,WAElBE,eAAkBI,KAAGH,EAAAI,IAAA,EAAAC,KAAA,WAAA,CAAA,CAJrB,CAAC,EAOiBC,IAAAA,MAAUC,UAASR,cAAA,GAE7BS,aAAA,CACAC,IAAAC,EAAWC,EAAAJ,GAUnBK,MATI,SAAAD,GACHV,MAAAK,UAAAC,EAAAM,IAAA,EAQaD,CAAAA,CACdE,CAEA,EAEQF,WAAad,YAAWiB,OAC5B,IAAAC,MAAA,IAAArB,WAAA,EAAAsB,UAAAnB,YAAAoB,KAAA,EAAAjB,KAAA,EAAAO,YAAA,EAAA,KAEAM,UAASK,YAAcJ,OACnBf,IAAEe,MAAAA,IAAWK,UAAW,WAACH,UAAahB,MAAAW,UAAA,EAAAJ,YAAA,EAC1C,IAAAQ,MAAA,IAAApB,UAAA,WAAAqB,UAAAhB,KAAA,EAAAO,YAAA,EAPJa,eAesBJ,UAAMK,EAAAC,EAAA,MAAAC,EAAA,KAAAT,EAAA,MAdxB,IAc0BA,EAN1BA,GAOqB,MADKA,EAQKA,IAPVf,EAAAe,CAAA,EAAAU,SAAA,YAAA,EALrB,IAeI,IAAAC,EAAAC,MAAAC,MAEGC,EAAK,CACIA,OAAMC,EAEdC,KAAA,OACKC,QAAIb,CACjBc,OAAA,mBACJC,eAAA,kBAAC,EAdeV,KAAMA,CACV,CAAC,EACL,GAAIE,EAAIS,GACJ,OAAOR,MAAMD,EAAIU,KAAK,EAEtBC,QAAQC,IAAI,aAAa,CAQjC,CALA,MAAOT,GACHQ,QAAQC,IAAIT,EAAMC,OAAO,CAC7B,CAAC,QAEGf,GAZQS,EAYmBT,CAZbS,EAAAA,YAAAA,YAAAA,CAalB,CACJ,CArCAZ,YAcQA,WAAA2B,kBAAA,EAbRzB,WAciBA,UAASc,kBACT","file":"BootstrapTable.min.js","sourcesContent":["import { Pagination } from './Pagination.js';\nimport { SortTable } from './SortTable.js';\nimport { Table } from './Table.js';\n\nconst $table = $('.bs-table');\nconst $pagination = $('.pagination');\n\nconst $table_columns = [];\n\n$('.c-table th').each(function () {\n    $table_columns.push($(this).attr('data-attr'))\n});\n\nconst table = new Table('c-table', $table_columns);\n\nconst proxyHandler = {\n    set(target, prop, val) {\n        if (prop === \"data\") {\n            table.fillTable(val.data);\n            return true;\n        }\n        return true;\n    },\n};\n\nconst pagination = $pagination.length ?\n    new Proxy(new Pagination(7, fetchData, $pagination.html(), table), proxyHandler) : null;\nconst sortTable = $pagination.length ?\n    new Proxy(new SortTable('.c-table', fetchData, table, pagination), proxyHandler) :\n    new Proxy(new SortTable('.c-table', fetchData, table), proxyHandler);\n\npagination && pagination.setEventListeners();\nsortTable && sortTable.setEventListeners();\n\nasync function fetchData (url, method = 'GET', body= null, loaderCnt = null) {\n    function enableLoader(loaderCnt) {\n        if (loaderCnt !== '') $(loaderCnt).addClass('opacity-25');\n    }\n    \n    function disableLoader(loaderCnt) {\n        $(loaderCnt).removeClass('opacity-25');\n    }\n\n    loaderCnt && enableLoader(loaderCnt);\n\n    try {\n        const res = await fetch(\n            url, {\n                method: method,\n                mode: 'cors', // this cannot be 'no-cors'\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: body\n            });\n        if (res.ok) {\n            return await res.json();\n        } else {\n            console.log('fetch error');\n        }\n    }\n    catch (error) {\n        console.log(error.message);\n    }\n    finally {\n        loaderCnt && disableLoader(loaderCnt);\n    }\n};\n"]}