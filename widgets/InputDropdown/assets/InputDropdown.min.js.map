{"version":3,"sources":["InputDropdown/assets/InputDropdown.js"],"names":["InputDropdown","constructor","config","console","log","this","ddSearch","document","querySelector","search","container","selected","label","toSubmit","ddToggle","resetBtn","ddLisItems","endpoint","switchValue","closest","getListItems","ajax","ddListFillFetch","lastSearchValue","lastSwitchValue","setEventListeners","searchValue","method","data","res","await","fetch","trim","mode","headers","Accept","Content-Type","ok","json","Object","values","length","keys","join","item","map","message","handleDropdownItemClick","textContent","target","querySelectorAll","classList","value","e","dropdownList","contains","remove","makeVisibleListItem","find","add","showNotFound","handleDropdownInput","radioSwitch","switchName2","endpoint2","innerHTML","checked","switchName1","endpoint1","listItemElem","setInvalid","isValidated","createElement","addEventListener","appendChild","elemLabel","elem","setValid","hiddenListItem","style","reset","form","forEach","textAlign"],"mappings":"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","file":"InputDropdown.min.js","sourcesContent":["class InputDropdown {\r\n    constructor(config) {\r\n        if (!config) return console.log('provide config for InputDropdown');\r\n        this.config = config;\r\n\r\n        this.dropdownList = document.querySelector(`#${config.container} .dropdown-menu`);\r\n        this.ddSearch = document.querySelector(`#${config.search}`);\r\n        this.selected = document.querySelector(`#${config.container} #idd-search-selected`);\r\n        this.label = document.querySelector(`#${config.container} label[for=${config.search}]`);\r\n        this.toSubmit = document.querySelector(`#${config.toSubmit}`);\r\n        this.ddToggle = document.querySelector(`#${config.container} #idd-toggle`);\r\n        this.resetBtn = document.querySelector(`#${config.container} #reset-idd`);\r\n        this.ddLisItems = [];\r\n        this.endpoint = config.endpoint ? config.endpoint : null;\r\n        this.switchValue = config.switchValue;\r\n        this.form = this.toSubmit.closest('form');\r\n        this.getListItems = config.ajax === '1' ? this.ddListFillFetch : null\r\n\r\n        /**\r\n         * // local state to prevent fetch on dropdown close (click to close)\r\n         *  and to force request on switch value change\r\n         */\r\n        this.searchValue = '';\r\n        this.lastSearchValue = '';\r\n        this.lastSwitchValue = '';\r\n        /**\r\n         */\r\n\r\n        this.setEventListeners();\r\n    }\r\n\r\n    async ddListFillFetch(searchValue, endpoint) {\r\n        try {\r\n            let data = null;\r\n            const res = await fetch(\r\n                `${endpoint}${searchValue.trim()}`, {\r\n                    method: 'GET',\r\n                    mode: 'cors', // this cannot be 'no-cors'\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                });\r\n\r\n            if (res.ok) {\r\n                data = await res.json();\r\n            }\r\n\r\n            if (data) {\r\n                if (data.length <= 1) {\r\n                    if (data.length === 0) return [];\r\n\r\n                    if (Object.values(data[0]).length > 1) {\r\n                        return [Object.values(data[0]).join(' / ')];\r\n                    } else return Object.values(data[0]);\r\n                }\r\n\r\n                return data.map(item => {\r\n                    if (Object.keys(item).length > 1) {\r\n                        return Object.values(item).join(' / ');\r\n                    } else return Object.values(item);\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n\r\n    handleDropdownItemClick(e) {\r\n        if (!e.target.classList.contains('form-dropdown')) return;\r\n        if (e.target.textContent.trim() === this.selected.textContent) return;\r\n\r\n        this.toSubmit.value = e.target.textContent;\r\n        this.selected.textContent = e.target.textContent;\r\n        this.selected.classList.remove('d-none');\r\n        this.resetBtn.classList.remove('d-none');\r\n        this.makeVisibleListItem();\r\n        [...this.dropdownList.querySelectorAll('li')]\r\n            .find(item => item.textContent === e.target.textContent).classList.add('d-none');\r\n        this.searchValue = this.ddSearch.value;\r\n    };\r\n\r\n    async handleDropdownInput() {\r\n        if (!this.dropdownList.classList.contains('show')) return;\r\n\r\n        if (!this.ddSearch.value) {\r\n            this.dropdownList.querySelectorAll('li').length <= 1 &&\r\n            this.dropdownList.classList.add('visually-hidden');\r\n            return;\r\n        }\r\n\r\n        if (this.ddSearch.value === this.searchValue) {\r\n            if (this.dropdownList.querySelectorAll('li').length <= 1) {\r\n                return this.showNotFound();\r\n            }\r\n        }\r\n\r\n        if (this.ddSearch.value.length < 2) {\r\n            this.dropdownList.classList.add('visually-hidden');\r\n            this.dropdownList.innerHTML = '';\r\n            return;\r\n        }\r\n\r\n        if (this.config.ajax) {\r\n            const radioSwitch = document.querySelectorAll(`#${this.config.container} .idd-switch`);\r\n\r\n            if (radioSwitch.length > 0) {\r\n                if (!radioSwitch[0].checked && !radioSwitch[1].checked) return;\r\n                if (radioSwitch[0].checked) this.switchValue = this.config.switchName1;\r\n                if (radioSwitch[1].checked) this.switchValue = this.config.switchName2;\r\n\r\n                switch (this.switchValue) {\r\n                    case this.config.switchName1 :\r\n                        this.endpoint = this.config.endpoint1;\r\n                        break;\r\n                    case this.config.switchName2 :\r\n                        this.endpoint = this.config.endpoint2;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (this.config.switch && !this.endpoint) return;\r\n            if (this.ddSearch.value === this.lastSearchValue && this.lastSwitchValue === this.switchValue) return;\r\n\r\n            this.dropdownList.classList.add('visually-hidden');\r\n            this.ddLisItems = await this.getListItems(this.ddSearch.value, this.endpoint);\r\n            if (!this.ddLisItems) return this.showNotFound();\r\n        }\r\n\r\n        if (this.ddSearch.value !== this.lastSearchValue || this.lastSwitchValue !== this.switchValue) {\r\n            this.dropdownList.innerHTML = '';\r\n\r\n            if (this.ddLisItems.length <= 1) {\r\n                if (this.ddLisItems.length === 0) {\r\n                    return this.showNotFound();\r\n                }\r\n\r\n                if (this.ddLisItems[0] === this.selected.textContent) {\r\n                    return this.showNotFound();\r\n                }\r\n            }\r\n\r\n            this.ddLisItems.forEach(item => {\r\n                if (item === this.selected.textContent) return;\r\n\r\n                const listItemElem = document.createElement('li');\r\n                listItemElem.classList.add('form-dropdown', 'dropdown-item', 'fw-normal', 'input-dd-fs');\r\n                listItemElem.textContent = item;\r\n                this.dropdownList.appendChild(listItemElem);\r\n            });\r\n\r\n            this.dropdownList.classList.remove('visually-hidden');\r\n        } else this.dropdownList.classList.remove('visually-hidden');\r\n\r\n        this.lastSwitchValue = this.switchValue;\r\n        this.lastSearchValue = this.ddSearch.value;\r\n    };\r\n\r\n    setInvalid(elem, elemLabel) {\r\n        elemLabel.classList.add('text-danger', 'is-invalid');\r\n        elem.classList.remove('border-dark');\r\n        elem.classList.add('is-invalid', 'border-2', 'border-danger');\r\n    };\r\n\r\n    setValid(elem, elemLabel) {\r\n        elemLabel.classList.remove('text-danger', 'is-invalid');\r\n        elem.classList.add('border-dark');\r\n        elem.classList.remove('is-invalid', 'border-2', 'border-danger');\r\n    };\r\n\r\n    isValidated(elem, label) {\r\n        if (!elem.checkValidity()) {\r\n            this.setInvalid(this.ddSearch, label);\r\n        }else {\r\n            this.setValid(this.ddSearch, label);\r\n        }\r\n    }\r\n\r\n    setEventListeners() {\r\n        this.ddToggle.addEventListener('click', () => this.handleDropdownInput());\r\n        this.dropdownList.addEventListener('click', (e) => this.handleDropdownItemClick(e));\r\n        this.resetBtn && this.resetBtn.addEventListener('click', () =>  this.reset());\r\n\r\n        this.form && this.form.addEventListener(\"submit\", () => this.isValidated(this.toSubmit, this.label));\r\n    };\r\n\r\n    reset() {\r\n        const radioSwitch = document.querySelectorAll(`#${this.config.container} .idd-switch`);\r\n\r\n        this.makeVisibleListItem();\r\n        this.toSubmit.value = '';\r\n        this.selected.textContent = '';\r\n        this.selected.classList.add('d-none');\r\n        this.resetBtn.classList.add('d-none');\r\n        this.searchValue = '';\r\n        this.switchValue = null;\r\n        this.dropdownList.classList.add('visually-hidden');\r\n\r\n        radioSwitch && radioSwitch.forEach(elem => elem.checked = false);\r\n    };\r\n\r\n    makeVisibleListItem() {\r\n        const hiddenListItem = this.dropdownList.querySelector('.d-none');\r\n        if (hiddenListItem) hiddenListItem.classList.remove('d-none');\r\n    };\r\n\r\n    showNotFound () {\r\n        this.dropdownList.style.textAlign = 'center';\r\n        this.dropdownList.textContent = 'Not found';\r\n    };\r\n}"]}